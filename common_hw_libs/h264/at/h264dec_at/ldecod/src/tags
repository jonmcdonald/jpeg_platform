!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
A	block.cpp	/^static const int A[4][4] = {$/;"	v	file:
AC_next_state_LPS_64	biaridecod.cpp	/^const unsigned short AC_next_state_LPS_64[64] =    $/;"	v
AC_next_state_MPS_64	biaridecod.cpp	/^const unsigned short AC_next_state_MPS_64[64] =    $/;"	v
ALPHA_TABLE	loopFilter.cpp	/^byte ALPHA_TABLE[52]  = {0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,4,4,5,6,  7,8,9,10,12,13,15,17,  20,22,25,28,32,36,40,45,  50,56,63,71,80,90,101,113,  127,144,162,182,203,226,255,255} ;$/;"	v
ANY_INTRA	loopFilter.cpp	177;"	d	file:
AbsFrameNum	../inc/global.h	/^  unsigned int AbsFrameNum;$/;"	m	struct:img_par
AllocNALU	nalucommon.cpp	/^NALU_t *AllocNALU(int buffersize)$/;"	f
AllocPPS	parsetcommon.cpp	/^pic_parameter_set_rbsp_t *AllocPPS ()$/;"	f
AllocPartition	ldecod.cpp	/^DataPartition *AllocPartition(int n)$/;"	f
AllocSPS	parsetcommon.cpp	/^seq_parameter_set_rbsp_t *AllocSPS ()$/;"	f
BETA_TABLE	loopFilter.cpp	/^byte  BETA_TABLE[52]  = {0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,2,2,2,3,  3,3,3, 4, 4, 4, 6, 6,   7, 7, 8, 8, 9, 9,10,10,  11,11,12,12,13,13, 14, 14,   15, 15, 16, 16, 17, 17, 18, 18} ;$/;"	v
BIARI_CTX_INIT1	context_ini.cpp	33;"	d	file:
BIARI_CTX_INIT2	context_ini.cpp	24;"	d	file:
BITS_CBP_MB	../inc/global.h	/^  BITS_CBP_MB,$/;"	e
BITS_COEFF_UV_MB	../inc/global.h	/^  BITS_COEFF_UV_MB,$/;"	e
BITS_COEFF_Y_MB	../inc/global.h	/^  BITS_COEFF_Y_MB,$/;"	e
BITS_HEADER_MB	../inc/global.h	/^  BITS_HEADER_MB,$/;"	e
BITS_INTER_MB	../inc/global.h	/^  BITS_INTER_MB,$/;"	e
BITS_TOTAL_MB	../inc/global.h	/^  BITS_TOTAL_MB,$/;"	e
BIT_SET	cabac.cpp	1166;"	d	file:
BLK_4_TO_8	loopFilter.cpp	/^byte BLK_4_TO_8[16]    = {0,0,1,1,0,0,1,1,2,2,3,3,2,2,3,3} ;$/;"	v
BLK_NUM	loopFilter.cpp	/^byte BLK_NUM[2][4][4]  = {{{0,4,8,12},{1,5,9,13},{2,6,10,14},{3,7,11,15}},{{0,1,2,3},{4,5,6,7},{8,9,10,11},{12,13,14,15}}} ;$/;"	v
BLOCK_MULTIPLE	../inc/defines.h	139;"	d
BLOCK_SIZE	../inc/defines.h	84;"	d
BLOCK_STEP	../inc/macroblock.h	/^static const int BLOCK_STEP[8][2]=$/;"	v
BOTTOM_FIELD	../inc/global.h	/^  BOTTOM_FIELD$/;"	e
BType2CtxRef	macroblock.cpp	/^BType2CtxRef (int btype)$/;"	f
B_BITS	biaridecod.cpp	31;"	d	file:
B_SLICE	../inc/global.h	/^  B_SLICE,$/;"	e
B_decoder	../inc/global.h	/^  unsigned long B_decoder;                \/\/!< Decoder Buffer size in HRD model$/;"	m	struct:inp_par
Bframe_ctr	../inc/global.h	/^int  Bframe_ctr;$/;"	v
Bframe_ctr	global.cpp	/^int  Bframe_ctr;$/;"	v
BiContextType	../inc/global.h	/^} BiContextType;$/;"	t
BiContextTypePtr	../inc/global.h	/^typedef BiContextType *BiContextTypePtr;$/;"	t
BitCountType	../inc/global.h	/^} BitCountType;$/;"	t
Bitstream	../inc/global.h	/^} Bitstream;$/;"	t
Bitstream_leng	global.cpp	/^unsigned int Bitstream_leng = 0;$/;"	v
Boolean	../inc/parsetcommon.h	/^} Boolean;$/;"	t
Boolean	../inc/parsetcommon.h	40;"	d
Buf	annexb.cpp	/^unsigned char *Buf;             \/\/from$/;"	v
CABAC	../inc/global.h	/^  CABAC$/;"	e
CALLBACK	../inc/global.h	/^  CALLBACK,$/;"	e
CHROMA_AC	../inc/defines.h	47;"	d
CHROMA_DC	../inc/defines.h	46;"	d
CLIP_TAB	loopFilter.cpp	/^byte CLIP_TAB[52][5]  =$/;"	v
CLK_CYCLES	../inc/global.h	37;"	d
CLK_UNIT	../inc/global.h	38;"	d
CONTEXT_INI_C	context_ini.cpp	16;"	d	file:
CQPOF	loopFilter.cpp	308;"	d	file:
CTX_UNUSED	../inc/ctx_tables.h	16;"	d
CeilLog2	header.cpp	/^unsigned CeilLog2( unsigned uiVal)$/;"	f
CheckAvailabilityOfNeighbors	mb_access.cpp	/^void CheckAvailabilityOfNeighbors()$/;"	f
CheckAvailabilityOfNeighborsCABAC	cabac.cpp	/^void CheckAvailabilityOfNeighborsCABAC()$/;"	f
Clip1	../inc/defines.h	57;"	d
Clip3	../inc/defines.h	58;"	d
CloseBitstreamFile	annexb.cpp	/^void CloseBitstreamFile()$/;"	f
CloseBitstreamFile2	annexb.cpp	/^void CloseBitstreamFile2()$/;"	f
CloseRTPFile	rtp.cpp	/^void CloseRTPFile()$/;"	f
DATADECFILE	ldecod.cpp	79;"	d	file:
DC_PRED	../inc/defines.h	92;"	d
DC_PRED_16	../inc/defines.h	103;"	d
DC_PRED_8	../inc/defines.h	107;"	d
DECODE_COPY_MB	../inc/defines.h	135;"	d
DECODE_MB	../inc/defines.h	136;"	d
DECODING_OK	../inc/defines.h	116;"	d
DEF_REGION_SIZE	../inc/erc_api.h	31;"	d
DIAG_DOWN_LEFT_PRED	../inc/defines.h	93;"	d
DIAG_DOWN_RIGHT_PRED	../inc/defines.h	94;"	d
DQ_BITS	../inc/block.h	20;"	d
DQ_ROUND	../inc/block.h	21;"	d
DataPartition	../inc/global.h	/^} DataPartition;$/;"	t
Dbits_to_go	../inc/global.h	/^  int             Dbits_to_go;$/;"	m
Dbits_to_go	biaridecod.cpp	27;"	d	file:
Dbuffer	../inc/global.h	/^  unsigned int    Dbuffer;$/;"	m
Dbuffer	biaridecod.cpp	26;"	d	file:
Dcodestrm	../inc/global.h	/^  byte            *Dcodestrm;$/;"	m
Dcodestrm	biaridecod.cpp	28;"	d	file:
Dcodestrm_len	../inc/global.h	/^  int             *Dcodestrm_len;$/;"	m
Dcodestrm_len	biaridecod.cpp	29;"	d	file:
DeblockCall	../inc/global.h	/^  int DeblockCall;$/;"	m	struct:img_par
DeblockFrame	loopFilter.cpp	/^void DeblockFrame(ImageParameters *img, byte **imgY, byte ***imgUV)$/;"	f
DeblockMb	loopFilter.cpp	/^void DeblockMb(ImageParameters *img, byte **imgY, byte ***imgUV, int MbQAddr)$/;"	f
DecRefPicMarking_s	../inc/global.h	/^typedef struct DecRefPicMarking_s$/;"	s
DecRefPicMarking_t	../inc/global.h	/^} DecRefPicMarking_t;$/;"	t
DecodedPictureBuffer	../inc/mbuffer.h	/^} DecodedPictureBuffer;$/;"	t
DecodingEnvironment	../inc/global.h	/^} DecodingEnvironment;$/;"	t
DecodingEnvironmentPtr	../inc/global.h	/^typedef DecodingEnvironment *DecodingEnvironmentPtr;$/;"	t
DecomposeRTPpacket	rtp.cpp	/^int DecomposeRTPpacket (RTPpacket_t *p)$/;"	f
Dlow	../inc/global.h	/^  unsigned int    Dlow, Drange;$/;"	m
Drange	../inc/global.h	/^  unsigned int    Dlow, Drange;$/;"	m
DumpPPS	parset.cpp	/^void DumpPPS (pic_parameter_set_rbsp_t *pps)$/;"	f
DumpRTPHeader	rtp.cpp	/^void DumpRTPHeader (RTPpacket_t *p)$/;"	f
DumpSPS	parset.cpp	/^void DumpSPS (seq_parameter_set_rbsp_t *sps)$/;"	f
Dvalue	../inc/global.h	/^  unsigned int    Dvalue;$/;"	m
EBSPtoRBSP	nal.cpp	/^int EBSPtoRBSP(byte *streamBuffer, int end_bytepos, int begin_bytepos)$/;"	f
EC_REQ	../inc/elements.h	72;"	d
EC_SYNC	../inc/elements.h	73;"	d
EOS	../inc/defines.h	112;"	d
ERC_BLOCK_CONCEALED	../inc/erc_api.h	34;"	d
ERC_BLOCK_CORRUPTED	../inc/erc_api.h	35;"	d
ERC_BLOCK_EMPTY	../inc/erc_api.h	36;"	d
ERC_BLOCK_OK	../inc/erc_api.h	33;"	d
ET_SIZE	../inc/global.h	104;"	d
ET_SIZE	global.cpp	19;"	d	file:
EdgeLoop	loopFilter.cpp	/^void EdgeLoop(byte** Img, byte Strength[16],struct img_par *img, int MbQAddr, int AlphaC0Offset, int BetaOffset,$/;"	f
ExpectedDeltaPerPicOrderCntCycle	../inc/global.h	/^           int ExpectedDeltaPerPicOrderCntCycle;$/;"	m	struct:img_par
ExpectedPicOrderCnt	../inc/global.h	/^    signed int ExpectedPicOrderCnt, PicOrderCntCycleCnt, FrameNumInPicOrderCntCycle;$/;"	m	struct:img_par
FALSE	../inc/parsetcommon.h	/^  FALSE,$/;"	e
FIELD_SCAN	../inc/macroblock.h	/^static const byte FIELD_SCAN[16][2] =$/;"	v
FIXED_MB	../inc/global.h	/^  FIXED_MB,$/;"	e
FIXED_RATE	../inc/global.h	/^  FIXED_RATE,$/;"	e
FMO	../inc/global.h	/^  FMO$/;"	e
FPTable	global.cpp	/^const unsigned int FPTable[61] = { 0, 18096, 22467, 27789, 33256, 38574, 44100, 49755, 55463, 61224, 66957, 72743, 78538, 84377, 90136, $/;"	v
FPindex	global.cpp	/^unsigned int FPindex = 0;$/;"	v
FRAME	../inc/global.h	/^  FRAME,$/;"	e
F_decoder	../inc/global.h	/^  unsigned long F_decoder;                \/\/!< Decoder Inital buffer fullness in HRD model$/;"	m	struct:inp_par
FileFormat	../inc/global.h	/^  int FileFormat;                         \/\/!< File format of the Input file, PAR_OF_ANNEXB or PAR_OF_RTP$/;"	m	struct:inp_par
FindStartCode	annexb.cpp	/^static int FindStartCode (unsigned char *Buf, int zeros_in_startcode)$/;"	f	file:
FirstPartOfSliceHeader	header.cpp	/^int FirstPartOfSliceHeader()$/;"	f
FmoFinit	fmo.cpp	/^int FmoFinit()$/;"	f
FmoGenerateMapUnitToSliceGroupMap	fmo.cpp	/^static int FmoGenerateMapUnitToSliceGroupMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps)$/;"	f	file:
FmoGenerateMbToSliceGroupMap	fmo.cpp	/^static int FmoGenerateMbToSliceGroupMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps)$/;"	f	file:
FmoGenerateType0MapUnitMap	fmo.cpp	/^static void FmoGenerateType0MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType1MapUnitMap	fmo.cpp	/^static void FmoGenerateType1MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType2MapUnitMap	fmo.cpp	/^static void FmoGenerateType2MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType3MapUnitMap	fmo.cpp	/^static void FmoGenerateType3MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType4MapUnitMap	fmo.cpp	/^static void FmoGenerateType4MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType5MapUnitMap	fmo.cpp	/^static void FmoGenerateType5MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType6MapUnitMap	fmo.cpp	/^static void FmoGenerateType6MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGetLastMBInSliceGroup	fmo.cpp	/^int FmoGetLastMBInSliceGroup (int SliceGroup)$/;"	f
FmoGetLastMBOfPicture	fmo.cpp	/^int FmoGetLastMBOfPicture()$/;"	f
FmoGetNextMBNr	fmo.cpp	/^int FmoGetNextMBNr (int CurrentMbNr)$/;"	f
FmoGetNumberOfSliceGroup	fmo.cpp	/^int FmoGetNumberOfSliceGroup()$/;"	f
FmoGetSliceGroupId	fmo.cpp	/^int FmoGetSliceGroupId (int mb)$/;"	f
FmoInit	fmo.cpp	/^int FmoInit(pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps)$/;"	f
FrameHeightInMbs	../inc/global.h	/^  unsigned FrameHeightInMbs;$/;"	m	struct:img_par
FrameNumInPicOrderCntCycle	../inc/global.h	/^    signed int ExpectedPicOrderCnt, PicOrderCntCycleCnt, FrameNumInPicOrderCntCycle;$/;"	m	struct:img_par
FrameNumOffset	../inc/global.h	/^  unsigned int PreviousFrameNum, FrameNumOffset;$/;"	m	struct:img_par
FrameSizeInMbs	../inc/global.h	/^  unsigned FrameSizeInMbs;$/;"	m	struct:img_par
FrameStore	../inc/mbuffer.h	/^} FrameStore;$/;"	t
Frame_cnt	global.cpp	/^int Frame_cnt = 0;$/;"	v
FreeNALU	nalucommon.cpp	/^void FreeNALU(NALU_t *n)$/;"	f
FreePPS	parsetcommon.cpp	/^ void FreePPS (pic_parameter_set_rbsp_t *pps)$/;"	f
FreePartition	ldecod.cpp	/^void FreePartition (DataPartition *dp, int n)$/;"	f
FreeSPS	parsetcommon.cpp	/^ void FreeSPS (seq_parameter_set_rbsp_t *sps)$/;"	f
GetAnnexbNALU	annexb.cpp	/^int GetAnnexbNALU (NALU_t *nalu)$/;"	f
GetBigDoubleWord	leaky_bucket.cpp	/^unsigned long GetBigDoubleWord(FILE *fp)$/;"	f
GetBits	vlc.cpp	/^int GetBits (byte buffer[],int totbitoffset,int *info, int bytecount, $/;"	f
GetRTPNALU	rtp.cpp	/^int GetRTPNALU (NALU_t *nalu)$/;"	f
GetStrength	loopFilter.cpp	/^void GetStrength(byte Strength[16],struct img_par *img,int MbQAddr,int dir,int edge, int mvlimit)$/;"	f
GetVLCSymbol	vlc.cpp	/^int GetVLCSymbol (byte buffer[],int totbitoffset,int *info, int bytecount)$/;"	f
GetVLCSymbol_IntraMode	vlc.cpp	/^int GetVLCSymbol_IntraMode (byte buffer[],int totbitoffset,int *info, int bytecount)$/;"	f
H26LPAYLOADTYPE	../inc/rtp.h	18;"	d
H26LSSRC	../inc/rtp.h	19;"	d
HALF	biaridecod.cpp	32;"	d	file:
HOR_DOWN_PRED	../inc/defines.h	96;"	d
HOR_PRED	../inc/defines.h	91;"	d
HOR_PRED_16	../inc/defines.h	102;"	d
HOR_PRED_8	../inc/defines.h	108;"	d
HOR_UP_PRED	../inc/defines.h	98;"	d
I16MB	../inc/defines.h	62;"	d
I16OFFSET	macroblock.cpp	213;"	d	file:
I4MB	../inc/defines.h	61;"	d
IBLOCK	../inc/defines.h	63;"	d
IClip	loopFilter.cpp	33;"	d	file:
ININT_STRENGTH	loopFilter.cpp	/^int  ININT_STRENGTH[4] = {0x04040404, 0x03030303, 0x03030303, 0x03030303} ; $/;"	v
INIT_ABS_I	../inc/ctx_tables.h	/^static const int INIT_ABS_I[1][8][5][2] =$/;"	v
INIT_ABS_P	../inc/ctx_tables.h	/^static const int INIT_ABS_P[3][8][5][2] =$/;"	v
INIT_B8_TYPE_I	../inc/ctx_tables.h	/^static const int INIT_B8_TYPE_I[1][2][9][2] =$/;"	v
INIT_B8_TYPE_P	../inc/ctx_tables.h	/^static const int INIT_B8_TYPE_P[3][2][9][2] =$/;"	v
INIT_BCBP_I	../inc/ctx_tables.h	/^static const int INIT_BCBP_I[1][8][4][2] =$/;"	v
INIT_BCBP_P	../inc/ctx_tables.h	/^static const int INIT_BCBP_P[3][8][4][2] =$/;"	v
INIT_CBP_I	../inc/ctx_tables.h	/^static const int INIT_CBP_I[1][3][4][2] =$/;"	v
INIT_CBP_P	../inc/ctx_tables.h	/^static const int INIT_CBP_P[3][3][4][2] =$/;"	v
INIT_CIPR_I	../inc/ctx_tables.h	/^static const int INIT_CIPR_I[1][1][4][2] =$/;"	v
INIT_CIPR_P	../inc/ctx_tables.h	/^static const int INIT_CIPR_P[3][1][4][2] =$/;"	v
INIT_DELTA_QP_I	../inc/ctx_tables.h	/^static const int INIT_DELTA_QP_I[1][1][4][2]=$/;"	v
INIT_DELTA_QP_P	../inc/ctx_tables.h	/^static const int INIT_DELTA_QP_P[3][1][4][2]=$/;"	v
INIT_FLD_LAST_I	../inc/ctx_tables.h	/^static const int INIT_FLD_LAST_I[1][8][15][2] =$/;"	v
INIT_FLD_LAST_P	../inc/ctx_tables.h	/^static const int INIT_FLD_LAST_P[3][8][15][2] =$/;"	v
INIT_FLD_MAP_I	../inc/ctx_tables.h	/^static const int INIT_FLD_MAP_I[1][8][15][2] =$/;"	v
INIT_FLD_MAP_P	../inc/ctx_tables.h	/^static const int INIT_FLD_MAP_P[3][8][15][2] =$/;"	v
INIT_IPR_I	../inc/ctx_tables.h	/^static const int INIT_IPR_I[1][1][2][2] =$/;"	v
INIT_IPR_P	../inc/ctx_tables.h	/^static const int INIT_IPR_P[3][1][2][2] =$/;"	v
INIT_LAST_I	../inc/ctx_tables.h	/^static const int INIT_LAST_I[1][8][15][2] =$/;"	v
INIT_LAST_P	../inc/ctx_tables.h	/^static const int INIT_LAST_P[3][8][15][2] =$/;"	v
INIT_MAP_I	../inc/ctx_tables.h	/^static const int INIT_MAP_I[1][8][15][2] =$/;"	v
INIT_MAP_P	../inc/ctx_tables.h	/^static const int INIT_MAP_P[3][8][15][2] =$/;"	v
INIT_MB_AFF_I	../inc/ctx_tables.h	/^static const int INIT_MB_AFF_I[1][1][4][2] =$/;"	v
INIT_MB_AFF_P	../inc/ctx_tables.h	/^static const int INIT_MB_AFF_P[3][1][4][2] =$/;"	v
INIT_MB_TYPE_I	../inc/ctx_tables.h	/^static const int INIT_MB_TYPE_I[1][3][11][2] =$/;"	v
INIT_MB_TYPE_P	../inc/ctx_tables.h	/^static const int INIT_MB_TYPE_P[3][3][11][2] =$/;"	v
INIT_MV_RES_I	../inc/ctx_tables.h	/^static const int INIT_MV_RES_I[1][2][10][2] =$/;"	v
INIT_MV_RES_P	../inc/ctx_tables.h	/^static const int INIT_MV_RES_P[3][2][10][2] =$/;"	v
INIT_ONE_I	../inc/ctx_tables.h	/^static const int INIT_ONE_I[1][8][5][2] =$/;"	v
INIT_ONE_P	../inc/ctx_tables.h	/^static const int INIT_ONE_P[3][8][5][2] =$/;"	v
INIT_REF_NO_I	../inc/ctx_tables.h	/^static const int INIT_REF_NO_I[1][2][6][2] =$/;"	v
INIT_REF_NO_P	../inc/ctx_tables.h	/^static const int INIT_REF_NO_P[3][2][6][2] =$/;"	v
INT64_MIN	../inc/global.h	52;"	d
INT64_MIN	../inc/global.h	55;"	d
INTER_MB	../inc/global.h	/^  INTER_MB,$/;"	e
INTRA_MB_16x16	../inc/global.h	/^  INTRA_MB_16x16$/;"	e
INTRA_MB_4x4	../inc/global.h	/^  INTRA_MB_4x4,$/;"	e
INVALIDINDEX	../inc/defines.h	122;"	d
IPCM	../inc/defines.h	66;"	d
IS_COPY	../inc/defines.h	75;"	d
IS_DIRECT	../inc/defines.h	74;"	d
IS_INTER	../inc/defines.h	72;"	d
IS_INTERMV	../inc/defines.h	73;"	d
IS_INTRA	../inc/defines.h	68;"	d
IS_NEWINTRA	../inc/defines.h	69;"	d
IS_OLDINTRA	../inc/defines.h	71;"	d
IS_P8x8	../inc/defines.h	76;"	d
I_SLICE	../inc/global.h	/^  I_SLICE,$/;"	e
ImageParameters	../inc/global.h	/^} ImageParameters;$/;"	t
InterpretPPS	parset.cpp	/^int InterpretPPS (DataPartition *p, pic_parameter_set_rbsp_t *pps)$/;"	f
InterpretSEIMessage	sei.cpp	/^void InterpretSEIMessage(byte* msg, int size, ImageParameters *img)$/;"	f
InterpretSPS	parset.cpp	/^int InterpretSPS (DataPartition *p, seq_parameter_set_rbsp_t *sps)$/;"	f
IntraInterDecision	../inc/global.h	/^} IntraInterDecision;$/;"	t
JM	ldecod.cpp	75;"	d	file:
LEVRUN1	vlc.cpp	/^const byte LEVRUN1[16]=$/;"	v
LEVRUN3	vlc.cpp	/^const byte LEVRUN3[4] =$/;"	v
LFAlphaC0Offset	../inc/global.h	/^  int                 LFAlphaC0Offset;  \/\/!< Alpha and C0 offset for filtering slice$/;"	m
LFAlphaC0Offset	../inc/global.h	/^  int           LFAlphaC0Offset;$/;"	m	struct:macroblock
LFBetaOffset	../inc/global.h	/^  int                 LFBetaOffset;     \/\/!< Beta offset for filtering slice$/;"	m
LFBetaOffset	../inc/global.h	/^  int           LFBetaOffset;$/;"	m	struct:macroblock
LFDisableIdc	../inc/global.h	/^  int                 LFDisableIdc;     \/\/!< Disable loop filter on slice$/;"	m
LFDisableIdc	../inc/global.h	/^  int           LFDisableIdc;$/;"	m	struct:macroblock
LIST_0	../inc/defines.h	27;"	d
LIST_1	../inc/defines.h	28;"	d
LOGFILE	ldecod.cpp	78;"	d	file:
LUMA	../inc/defines.h	31;"	d
LUMA_16AC	../inc/defines.h	41;"	d
LUMA_16DC	../inc/defines.h	40;"	d
LUMA_4x4	../inc/defines.h	45;"	d
LUMA_4x8	../inc/defines.h	44;"	d
LUMA_8x4	../inc/defines.h	43;"	d
LUMA_8x8	../inc/defines.h	42;"	d
LUMA_INTRA16x16AC	../inc/defines.h	33;"	d
LUMA_INTRA16x16DC	../inc/defines.h	32;"	d
LeakyBucketParamFile	../inc/global.h	/^  char LeakyBucketParamFile[100];         \/\/!< LeakyBucketParamFile$/;"	m	struct:inp_par
MAXIMUMPARSETNALUSIZE	../inc/parsetcommon.h	32;"	d
MAXIMUMPARSETRBSPSIZE	../inc/parsetcommon.h	31;"	d
MAXIMUMVALUEOFcpb_cnt	../inc/parsetcommon.h	48;"	d
MAXMODE	../inc/defines.h	65;"	d
MAXPARTITIONMODES	../inc/elements.h	75;"	d
MAXPPS	../inc/parsetcommon.h	36;"	d
MAXRBSPSIZE	../inc/nalucommon.h	19;"	d
MAXRTPPACKETSIZE	../inc/rtp.h	17;"	d
MAXRTPPAYLOADLEN	../inc/rtp.h	16;"	d
MAXSPS	../inc/parsetcommon.h	35;"	d
MAX_BITCOUNTER_MB	../inc/global.h	/^  MAX_BITCOUNTER_MB$/;"	e
MAX_CODED_FRAME_SIZE	../inc/defines.h	51;"	d
MAX_FN	../inc/sei.h	39;"	d
MAX_HEIGHT	../inc/global.h	486;"	d
MAX_LIST_SIZE	mbuffer.cpp	44;"	d	file:
MAX_MB_HEIGHT	../inc/global.h	488;"	d
MAX_MB_WIDTH	../inc/global.h	487;"	d
MAX_QP	../inc/defines.h	82;"	d
MAX_REFERENCE_PICTURES	../inc/defines.h	120;"	d
MAX_WIDTH	../inc/global.h	485;"	d
MAXnum_ref_frames_in_pic_order_cnt_cycle	../inc/parsetcommon.h	139;"	d
MAXnum_slice_groups_minus1	../inc/parsetcommon.h	103;"	d
MBNum2YBlock	../inc/erc_api.h	61;"	d
MB_BLOCK_SIZE	../inc/defines.h	85;"	d
MBxy2YBlock	../inc/erc_api.h	58;"	d
MIN_QP	../inc/defines.h	81;"	d
MODE_IS_I4x4	macroblock.cpp	212;"	d	file:
MODE_IS_IPCM	macroblock.cpp	214;"	d	file:
MODE_IS_P8x8	macroblock.cpp	211;"	d	file:
MPS	../inc/global.h	/^  unsigned char  MPS;           \/\/ Least Probable Symbol 0\/1 CP$/;"	m
MVPERMB_THR	../inc/erc_api.h	28;"	d
MVPRED_L	../inc/defines.h	131;"	d
MVPRED_MEDIAN	../inc/defines.h	130;"	d
MVPRED_U	../inc/defines.h	132;"	d
MVPRED_UR	../inc/defines.h	133;"	d
Macroblock	../inc/global.h	/^} Macroblock;$/;"	t
MakePPSavailable	parset.cpp	/^void MakePPSavailable (int id, pic_parameter_set_rbsp_t *pps)$/;"	f
MakeSPSavailable	parset.cpp	/^void MakeSPSavailable (int id, seq_parameter_set_rbsp_t *sps)$/;"	f
MapUnitToSliceGroupMap	fmo.cpp	/^int *MapUnitToSliceGroupMap = NULL; $/;"	v
MaxFrameNum	../inc/global.h	/^  int MaxFrameNum;$/;"	m	struct:img_par
MbAffPostProc	image.cpp	/^void MbAffPostProc()$/;"	f
MbToSliceGroupMap	fmo.cpp	/^int *MbToSliceGroupMap = NULL;$/;"	v
MbaffFrameFlag	../inc/global.h	/^  int MbaffFrameFlag;$/;"	m	struct:img_par
MotionInfoContexts	../inc/global.h	/^} MotionInfoContexts;$/;"	t
NALU_PRIORITY_DISPOSABLE	../inc/nalucommon.h	37;"	d
NALU_PRIORITY_HIGH	../inc/nalucommon.h	35;"	d
NALU_PRIORITY_HIGHEST	../inc/nalucommon.h	34;"	d
NALU_PRIRITY_LOW	../inc/nalucommon.h	36;"	d
NALU_TYPE_DPA	../inc/nalucommon.h	22;"	d
NALU_TYPE_DPB	../inc/nalucommon.h	23;"	d
NALU_TYPE_DPC	../inc/nalucommon.h	24;"	d
NALU_TYPE_EOSEQ	../inc/nalucommon.h	30;"	d
NALU_TYPE_EOSTREAM	../inc/nalucommon.h	31;"	d
NALU_TYPE_FILL	../inc/nalucommon.h	32;"	d
NALU_TYPE_IDR	../inc/nalucommon.h	25;"	d
NALU_TYPE_PD	../inc/nalucommon.h	29;"	d
NALU_TYPE_PPS	../inc/nalucommon.h	28;"	d
NALU_TYPE_SEI	../inc/nalucommon.h	26;"	d
NALU_TYPE_SLICE	../inc/nalucommon.h	21;"	d
NALU_TYPE_SPS	../inc/nalucommon.h	27;"	d
NALU_t	../inc/nalucommon.h	/^} NALU_t;$/;"	t
NALUtoRBSP	nalu.cpp	/^int NALUtoRBSP (NALU_t *nalu)$/;"	f
NCBP	../inc/macroblock.h	/^static const byte NCBP[48][2]=$/;"	v
NO_EC	../inc/elements.h	71;"	d
NO_INTRA_PMODE	../inc/defines.h	88;"	d
NO_SLICES	../inc/global.h	/^  NO_SLICES,$/;"	e
NTAB1	vlc.cpp	/^const byte NTAB1[4][8][2] =$/;"	v
NTAB2	vlc.cpp	/^const byte NTAB2[4][8][2] =$/;"	v
NTAB3	vlc.cpp	/^const byte NTAB3[2][2][2] =$/;"	v
NUM_ABS_CTX	../inc/global.h	272;"	d
NUM_B8_TYPE_CTX	../inc/global.h	248;"	d
NUM_BCBP_CTX	../inc/global.h	268;"	d
NUM_BLOCK_TYPES	../inc/defines.h	48;"	d
NUM_CBP_CTX	../inc/global.h	267;"	d
NUM_CIPR_CTX	../inc/global.h	266;"	d
NUM_CTX_MODELS_I	../inc/ctx_tables.h	22;"	d
NUM_CTX_MODELS_P	../inc/ctx_tables.h	23;"	d
NUM_DELTA_QP_CTX	../inc/global.h	251;"	d
NUM_IPR_CTX	../inc/global.h	265;"	d
NUM_LAST_CTX	../inc/global.h	270;"	d
NUM_MAP_CTX	../inc/global.h	269;"	d
NUM_MB_AFF_CTX	../inc/global.h	252;"	d
NUM_MB_TYPE_CTX	../inc/global.h	247;"	d
NUM_MV_RES_CTX	../inc/global.h	249;"	d
NUM_ONE_CTX	../inc/global.h	271;"	d
NUM_REF_NO_CTX	../inc/global.h	250;"	d
Next	../inc/global.h	/^  struct DecRefPicMarking_s *Next;$/;"	m	struct:DecRefPicMarking_s
NumberOfSliceGroups	fmo.cpp	/^static int NumberOfSliceGroups;    \/\/ the number of slice groups -1 (0 == scan order, 7 == maximum)$/;"	v	file:
OUTSTRING_SIZE	ldecod.cpp	496;"	d	file:
OpenBitstreamFile	annexb.cpp	/^void OpenBitstreamFile (char *fn)$/;"	f
OpenBitstreamFile2	annexb.cpp	/^void OpenBitstreamFile2 (unsigned char *bst)$/;"	f
OpenRTPFile	rtp.cpp	/^void OpenRTPFile (char *fn)$/;"	f
P8x8	../inc/defines.h	60;"	d
PAR_DP_1	../inc/global.h	/^  PAR_DP_1,    \/\/!< no data partitioning is supported$/;"	e
PAR_DP_3	../inc/global.h	/^  PAR_DP_3    \/\/!< data partitioning with 3 partitions$/;"	e
PAR_DP_TYPE	../inc/global.h	/^} PAR_DP_TYPE;$/;"	t
PAR_OF_ANNEXB	../inc/global.h	/^  PAR_OF_ANNEXB,   \/\/!< Current TML description$/;"	e
PAR_OF_RTP	../inc/global.h	/^  PAR_OF_RTP   \/\/!< RTP Packet Output format$/;"	e
PAR_OF_TYPE	../inc/global.h	/^} PAR_OF_TYPE;$/;"	t
PAYLOAD_TYPE_IDERP	../inc/global.h	772;"	d
PICTURE_DECODED	../inc/defines.h	118;"	d
PLANE_16	../inc/defines.h	104;"	d
PLANE_8	../inc/defines.h	110;"	d
PPSConsistencyCheck	parset.cpp	/^void PPSConsistencyCheck (pic_parameter_set_rbsp_t *pps)$/;"	f
PRINT_BUFFERING_PERIOD_INFO	sei.cpp	1414;"	d	file:
PRINT_DEC_REF_PIC_MARKING	sei.cpp	1039;"	d	file:
PRINT_FILLER_PAYLOAD_INFO	sei.cpp	721;"	d	file:
PRINT_FULL_FRAME_FREEZE_INFO	sei.cpp	1067;"	d	file:
PRINT_FULL_FRAME_FREEZE_RELEASE_INFO	sei.cpp	1096;"	d	file:
PRINT_FULL_FRAME_SNAPSHOT_INFO	sei.cpp	1138;"	d	file:
PRINT_MOTION_CONST_SLICE_GROUP_SET_INFO	sei.cpp	1294;"	d	file:
PRINT_PAN_SCAN_RECT	sei.cpp	869;"	d	file:
PRINT_PCITURE_TIMING_INFO	sei.cpp	1583;"	d	file:
PRINT_PROGRESSIVE_REFINEMENT_END_INFO	sei.cpp	1225;"	d	file:
PRINT_PROGRESSIVE_REFINEMENT_START_INFO	sei.cpp	1182;"	d	file:
PRINT_RANDOM_ACCESS	sei.cpp	919;"	d	file:
PRINT_RESERVED_INFO	sei.cpp	1331;"	d	file:
PRINT_SCENE_INFORMATION	sei.cpp	676;"	d	file:
PRINT_SUBSEQUENCE_CHAR	sei.cpp	624;"	d	file:
PRINT_SUBSEQUENCE_INFO	sei.cpp	477;"	d	file:
PRINT_USER_DATA_REGISTERED_ITU_T_T35_INFO	sei.cpp	816;"	d	file:
PRINT_USER_DATA_UNREGISTERED_INFO	sei.cpp	770;"	d	file:
P_A	block.cpp	60;"	d	file:
P_B	block.cpp	61;"	d	file:
P_C	block.cpp	62;"	d	file:
P_D	block.cpp	63;"	d	file:
P_E	block.cpp	64;"	d	file:
P_F	block.cpp	65;"	d	file:
P_G	block.cpp	66;"	d	file:
P_H	block.cpp	67;"	d	file:
P_I	block.cpp	68;"	d	file:
P_J	block.cpp	69;"	d	file:
P_K	block.cpp	70;"	d	file:
P_L	block.cpp	71;"	d	file:
P_SLICE	../inc/global.h	/^  P_SLICE = 0,$/;"	e
P_X	block.cpp	59;"	d	file:
PartitionMode	nal_part.cpp	/^int PartitionMode;$/;"	v
PicHeightInMapUnits	../inc/global.h	/^  unsigned PicHeightInMapUnits;$/;"	m	struct:img_par
PicHeightInMbs	../inc/global.h	/^  unsigned PicHeightInMbs;$/;"	m	struct:img_par
PicOrderCntCycleCnt	../inc/global.h	/^    signed int ExpectedPicOrderCnt, PicOrderCntCycleCnt, FrameNumInPicOrderCntCycle;$/;"	m	struct:img_par
PicOrderCntMsb	../inc/global.h	/^    signed int PicOrderCntMsb;$/;"	m	struct:img_par
PicParSet	parset.cpp	/^pic_parameter_set_rbsp_t PicParSet[MAXPPS];$/;"	v
PicSizeInMbs	../inc/global.h	/^  unsigned PicSizeInMbs;$/;"	m	struct:img_par
PicWidthInMbs	../inc/global.h	/^  unsigned PicWidthInMbs;$/;"	m	struct:img_par
PictureStructure	../inc/global.h	/^} PictureStructure;           \/\/!< New enum for field processing$/;"	t
PixelPos	../inc/global.h	/^} PixelPos;$/;"	t
PrevPicOrderCntLsb	../inc/global.h	/^  unsigned int PrevPicOrderCntLsb;$/;"	m	struct:img_par
PrevPicOrderCntMsb	../inc/global.h	/^    signed int PrevPicOrderCntMsb;$/;"	m	struct:img_par
PreviousFrameNum	../inc/global.h	/^  unsigned int PreviousFrameNum, FrameNumOffset;$/;"	m	struct:img_par
PreviousFrameNumOffset	../inc/global.h	/^           int PreviousFrameNumOffset;$/;"	m	struct:img_par
PreviousPOC	../inc/global.h	/^           int PreviousPOC, ThisPOC;$/;"	m	struct:img_par
ProcessPPS	parset.cpp	/^void ProcessPPS (NALU_t *nalu)$/;"	f
ProcessSPS	parset.cpp	/^void ProcessSPS (NALU_t *nalu)$/;"	f
QP_SCALE_CR	../inc/macroblock.h	/^const byte QP_SCALE_CR[52]=$/;"	v
QUARTER	biaridecod.cpp	33;"	d	file:
Q_BITS	block.cpp	30;"	d	file:
RBSPtoSODB	nal.cpp	/^int RBSPtoSODB(byte *streamBuffer, int last_byte_pos)$/;"	f
REGMODE_INTER_COPY	../inc/erc_globals.h	24;"	d
REGMODE_INTER_COPY_8x8	../inc/erc_globals.h	29;"	d
REGMODE_INTER_PRED	../inc/erc_globals.h	25;"	d
REGMODE_INTER_PRED_8x8	../inc/erc_globals.h	30;"	d
REGMODE_INTRA	../inc/erc_globals.h	26;"	d
REGMODE_INTRA_8x8	../inc/erc_globals.h	31;"	d
REGMODE_SPLITTED	../inc/erc_globals.h	27;"	d
RSD	mbuffer.cpp	2477;"	d	file:
RTPReadPacket	rtp.cpp	/^int RTPReadPacket (RTPpacket_t *p, FILE *bits)$/;"	f
RTP_TR_TIMESTAMP_MULT	../inc/rtp.h	20;"	d
RTPpacket_t	../inc/rtp.h	/^} RTPpacket_t;$/;"	t
RUNBEFORE_NUM	../inc/defines.h	36;"	d
R_decoder	../inc/global.h	/^  unsigned long R_decoder;                \/\/!< Decoder Rate in HRD Model$/;"	m	struct:inp_par
ReMapRef	../inc/global.h	/^int  ReMapRef[20];$/;"	v
ReMapRef	global.cpp	/^int  ReMapRef[20];$/;"	v
RestOfSliceHeader	header.cpp	/^int RestOfSliceHeader()$/;"	f
SEARCH_SYNC	../inc/defines.h	117;"	d
SEI_BUFFERING_PERIOD	../inc/sei.h	/^  SEI_BUFFERING_PERIOD = 0,$/;"	e
SEI_DEC_REF_PIC_MARKING_REPETITION	../inc/sei.h	/^  SEI_DEC_REF_PIC_MARKING_REPETITION,$/;"	e
SEI_FILLER_PAYLOAD	../inc/sei.h	/^  SEI_FILLER_PAYLOAD,$/;"	e
SEI_FULL_FRAME_FREEZE	../inc/sei.h	/^  SEI_FULL_FRAME_FREEZE,$/;"	e
SEI_FULL_FRAME_FREEZE_RELEASE	../inc/sei.h	/^  SEI_FULL_FRAME_FREEZE_RELEASE,$/;"	e
SEI_FULL_FRAME_SNAPSHOT	../inc/sei.h	/^  SEI_FULL_FRAME_SNAPSHOT,$/;"	e
SEI_H	../inc/sei.h	12;"	d
SEI_MAX_ELEMENTS	../inc/sei.h	/^  SEI_MAX_ELEMENTS  \/\/!< number of maximum syntax elements$/;"	e
SEI_MOTION_CONSTRAINED_SLICE_GROUP_SET	../inc/sei.h	/^  SEI_MOTION_CONSTRAINED_SLICE_GROUP_SET,$/;"	e
SEI_PAN_SCAN_RECT	../inc/sei.h	/^  SEI_PAN_SCAN_RECT,$/;"	e
SEI_PIC_TIMING	../inc/sei.h	/^  SEI_PIC_TIMING,$/;"	e
SEI_PROGRESSIVE_REFINEMENT_SEGMENT_END	../inc/sei.h	/^  SEI_PROGRESSIVE_REFINEMENT_SEGMENT_END,$/;"	e
SEI_PROGRESSIVE_REFINEMENT_SEGMENT_START	../inc/sei.h	/^  SEI_PROGRESSIVE_REFINEMENT_SEGMENT_START,$/;"	e
SEI_RANDOM_ACCESS_POINT	../inc/sei.h	/^  SEI_RANDOM_ACCESS_POINT,$/;"	e
SEI_SCENE_INFO	../inc/sei.h	/^  SEI_SCENE_INFO,$/;"	e
SEI_SPARE_PIC	../inc/sei.h	/^  SEI_SPARE_PIC,$/;"	e
SEI_SUB_SEQ_CHARACTERISTICS	../inc/sei.h	/^  SEI_SUB_SEQ_CHARACTERISTICS,$/;"	e
SEI_SUB_SEQ_INFO	../inc/sei.h	/^  SEI_SUB_SEQ_INFO,$/;"	e
SEI_SUB_SEQ_LAYER_CHARACTERISTICS	../inc/sei.h	/^  SEI_SUB_SEQ_LAYER_CHARACTERISTICS,$/;"	e
SEI_USER_DATA_REGISTERED_ITU_T_T35	../inc/sei.h	/^  SEI_USER_DATA_REGISTERED_ITU_T_T35,$/;"	e
SEI_USER_DATA_UNREGISTERED	../inc/sei.h	/^  SEI_USER_DATA_UNREGISTERED,$/;"	e
SEI_type	../inc/sei.h	/^} SEI_type;$/;"	t
SE_BFRAME	../inc/elements.h	66;"	d
SE_BFRAME	../inc/global.h	/^  SE_BFRAME,$/;"	e
SE_CBP_INTER	../inc/elements.h	59;"	d
SE_CBP_INTER	../inc/global.h	/^  SE_CBP_INTER,$/;"	e
SE_CBP_INTRA	../inc/elements.h	54;"	d
SE_CBP_INTRA	../inc/global.h	/^  SE_CBP_INTRA,$/;"	e
SE_CHR_AC_INTER	../inc/elements.h	63;"	d
SE_CHR_AC_INTER	../inc/global.h	/^  SE_CHR_AC_INTER,$/;"	e
SE_CHR_AC_INTRA	../inc/elements.h	58;"	d
SE_CHR_AC_INTRA	../inc/global.h	/^  SE_CHR_AC_INTRA,$/;"	e
SE_CHR_DC_INTER	../inc/elements.h	61;"	d
SE_CHR_DC_INTER	../inc/global.h	/^  SE_CHR_DC_INTER,$/;"	e
SE_CHR_DC_INTRA	../inc/elements.h	56;"	d
SE_CHR_DC_INTRA	../inc/global.h	/^  SE_CHR_DC_INTRA,$/;"	e
SE_DELTA_QUANT_INTER	../inc/elements.h	64;"	d
SE_DELTA_QUANT_INTER	../inc/global.h	/^  SE_DELTA_QUANT_INTER,$/;"	e
SE_DELTA_QUANT_INTRA	../inc/elements.h	65;"	d
SE_DELTA_QUANT_INTRA	../inc/global.h	/^  SE_DELTA_QUANT_INTRA,$/;"	e
SE_EOS	../inc/elements.h	67;"	d
SE_EOS	../inc/global.h	/^  SE_EOS,$/;"	e
SE_HEADER	../inc/elements.h	48;"	d
SE_HEADER	../inc/global.h	/^  SE_HEADER,$/;"	e
SE_INTRAPREDMODE	../inc/elements.h	52;"	d
SE_INTRAPREDMODE	../inc/global.h	/^  SE_INTRAPREDMODE,$/;"	e
SE_LUM_AC_INTER	../inc/elements.h	62;"	d
SE_LUM_AC_INTER	../inc/global.h	/^  SE_LUM_AC_INTER,$/;"	e
SE_LUM_AC_INTRA	../inc/elements.h	57;"	d
SE_LUM_AC_INTRA	../inc/global.h	/^  SE_LUM_AC_INTRA,$/;"	e
SE_LUM_DC_INTER	../inc/elements.h	60;"	d
SE_LUM_DC_INTER	../inc/global.h	/^  SE_LUM_DC_INTER,$/;"	e
SE_LUM_DC_INTRA	../inc/elements.h	55;"	d
SE_LUM_DC_INTRA	../inc/global.h	/^  SE_LUM_DC_INTRA,$/;"	e
SE_MAX_ELEMENTS	../inc/elements.h	68;"	d
SE_MAX_ELEMENTS	../inc/global.h	/^  SE_MAX_ELEMENTS \/\/!< number of maximum syntax elements, this MUST be the last one!$/;"	e
SE_MBTYPE	../inc/elements.h	50;"	d
SE_MBTYPE	../inc/global.h	/^  SE_MBTYPE,$/;"	e
SE_MVD	../inc/elements.h	53;"	d
SE_MVD	../inc/global.h	/^  SE_MVD,$/;"	e
SE_PTYPE	../inc/elements.h	49;"	d
SE_PTYPE	../inc/global.h	/^  SE_PTYPE,$/;"	e
SE_REFFRAME	../inc/elements.h	51;"	d
SE_REFFRAME	../inc/global.h	/^  SE_REFFRAME,$/;"	e
SE_type	../inc/global.h	/^} SE_type;        \/\/ substituting the definitions in element.h$/;"	t
SI4MB	../inc/defines.h	64;"	d
SIZEslice_group_id	../inc/parsetcommon.h	33;"	d
SI_SLICE	../inc/global.h	/^  SI_SLICE$/;"	e
SNGL_SCAN	../inc/macroblock.h	/^static const byte SNGL_SCAN[16][2] =$/;"	v
SOP	../inc/defines.h	113;"	d
SOS	../inc/defines.h	114;"	d
SPSConsistencyCheck	parset.cpp	/^void SPSConsistencyCheck (seq_parameter_set_rbsp_t *sps)$/;"	f
SP_SLICE	../inc/global.h	/^  SP_SLICE,$/;"	e
SYMTRACESTRING	header.cpp	28;"	d	file:
SYMTRACESTRING	header.cpp	30;"	d	file:
SYMTRACESTRING	parset.cpp	30;"	d	file:
SYMTRACESTRING	parset.cpp	32;"	d	file:
SYMTRACESTRING	vlc.cpp	33;"	d	file:
SYMTRACESTRING	vlc.cpp	35;"	d	file:
SeqParSet	parset.cpp	/^seq_parameter_set_rbsp_t SeqParSet[MAXSPS];$/;"	v
SetB8Mode	macroblock.cpp	/^void SetB8Mode (struct img_par* img, Macroblock* currMB, int value, int i)$/;"	f
SetMotionVectorPredictor	macroblock.cpp	/^static void SetMotionVectorPredictor (struct img_par  *img,$/;"	f	file:
ShowBits	vlc.cpp	/^int ShowBits (byte buffer[],int totbitoffset,int bytecount, int numbits)$/;"	f
Slice	../inc/global.h	/^} Slice;$/;"	t
SliceMode	../inc/global.h	/^} SliceMode;$/;"	t
SliceType	../inc/global.h	/^} SliceType;$/;"	t
StorablePicture	../inc/mbuffer.h	/^} StorablePicture;$/;"	t
SymbolMode	../inc/global.h	/^} SymbolMode;$/;"	t
SyntaxElement	../inc/global.h	/^} SyntaxElement;$/;"	t
TOP_FIELD	../inc/global.h	/^  TOP_FIELD,$/;"	e
TOTRUN_NUM	../inc/defines.h	35;"	d
TRACE	../inc/defines.h	22;"	d
TRACE	../inc/defines.h	24;"	d
TRACEFILE	ldecod.cpp	80;"	d	file:
TRACESTRING_SIZE	../inc/global.h	325;"	d
TRACE_STRING	macroblock.cpp	42;"	d	file:
TRACE_STRING	macroblock.cpp	44;"	d	file:
TRUE	../inc/parsetcommon.h	/^  TRUE$/;"	e
TextureInfoContexts	../inc/global.h	/^} TextureInfoContexts;$/;"	t
ThisPOC	../inc/global.h	/^           int PreviousPOC, ThisPOC;$/;"	m	struct:img_par
TopFieldForSkip_UV	../inc/global.h	/^int  TopFieldForSkip_UV[2][16][16];$/;"	v
TopFieldForSkip_UV	global.cpp	/^int  TopFieldForSkip_UV[2][16][16];$/;"	v
TopFieldForSkip_Y	../inc/global.h	/^int  TopFieldForSkip_Y[16][16];$/;"	v
TopFieldForSkip_Y	global.cpp	/^int  TopFieldForSkip_Y[16][16];$/;"	v
UVLC	../inc/global.h	/^  UVLC,$/;"	e
UseParameterSet	parset.cpp	/^void UseParameterSet (int PicParsetId)$/;"	f
UsedBits	vlc.cpp	/^int UsedBits;      \/\/ for internal statistics, is adjusted by se_v, ue_v, u_1$/;"	v
VERSION	ldecod.cpp	76;"	d	file:
VERT_LEFT_PRED	../inc/defines.h	97;"	d
VERT_PRED	../inc/defines.h	90;"	d
VERT_PRED_16	../inc/defines.h	101;"	d
VERT_PRED_8	../inc/defines.h	109;"	d
VERT_RIGHT_PRED	../inc/defines.h	95;"	d
Valid	../inc/parsetcommon.h	/^  Boolean   Valid;                  \/\/ indicates the parameter set is valid$/;"	m
WRITE_MAP_IMAGE	sei.cpp	411;"	d	file:
ZEROBYTES_SHORTSTARTCODE	../inc/defines.h	142;"	d
ZERO_P8x8	macroblock.cpp	210;"	d	file:
_ANNEXB_H_	../inc/annexb.h	13;"	d
_BIARIDECOD_H_	../inc/biaridecod.h	21;"	d
_BLOCK_H_	../inc/block.h	16;"	d
_CABAC_H_	../inc/cabac.h	20;"	d
_CONTEXT_INI_	../inc/context_ini.h	18;"	d
_DEFINES_H_	../inc/defines.h	19;"	d
_ELEMENTS_H_	../inc/elements.h	24;"	d
_ERC_API_H_	../inc/erc_api.h	18;"	d
_ERC_DO_H_	../inc/erc_do.h	17;"	d
_ERC_GLOBALS_H_	../inc/erc_globals.h	16;"	d
_ERRORCONCEALMENT_H_	../inc/errorconcealment.h	14;"	d
_FMO_H_	../inc/fmo.h	18;"	d
_GLOBAL_H_	../inc/global.h	27;"	d
_GLOBAL_SC_H_	../inc/global_sc.h	2;"	d
_HEADER_H_	../inc/header.h	12;"	d
_IMAGE_H_	../inc/image.h	10;"	d
_LEAKY_BUCKET_H_	../inc/leaky_bucket.h	15;"	d
_MACROBLOCK_H_	../inc/macroblock.h	13;"	d
_MBUFFER_H_	../inc/mbuffer.h	16;"	d
_MB_ACCESS_H_	../inc/mb_access.h	16;"	d
_MEMALLOC_H_	../inc/memalloc.h	15;"	d
_NALUCOMMON_H_	../inc/nalucommon.h	17;"	d
_NALU_H_	../inc/nalu.h	18;"	d
_PARSETCOMMON_H_	../inc/parsetcommon.h	27;"	d
_PARSET_H_	../inc/parset.h	16;"	d
_RTP_H_	../inc/rtp.h	12;"	d
_VLC_H_	../inc/vlc.h	16;"	d
__LDECOD_H__	../inc/ldecod.h	4;"	d
__report	ldecod.cpp	/^void __report(struct inp_par *inp, struct img_par *img, struct snr_par *snr)$/;"	f
abs_contexts	../inc/global.h	/^  BiContextType  abs_contexts [NUM_BLOCK_TYPES][NUM_ABS_CTX];$/;"	m
abs_diff_pic_num_minus1_l0	../inc/global.h	/^  int                 *abs_diff_pic_num_minus1_l0;$/;"	m
abs_diff_pic_num_minus1_l1	../inc/global.h	/^  int                 *abs_diff_pic_num_minus1_l1;$/;"	m
absm	../inc/defines.h	55;"	d
active_pps	../inc/global.h	/^pic_parameter_set_rbsp_t *active_pps;$/;"	v
active_pps	global.cpp	/^pic_parameter_set_rbsp_t *active_pps;$/;"	v
active_sps	../inc/global.h	/^seq_parameter_set_rbsp_t *active_sps;$/;"	v
active_sps	global.cpp	/^seq_parameter_set_rbsp_t *active_sps;$/;"	v
adaptive_memory_management	mbuffer.cpp	/^static void adaptive_memory_management(StorablePicture* p)$/;"	f	file:
adaptive_ref_pic_buffering_flag	../inc/global.h	/^  int adaptive_ref_pic_buffering_flag;$/;"	m	struct:img_par
alloc_frame_store	mbuffer.cpp	/^FrameStore* alloc_frame_store()$/;"	f
alloc_ref_pic_list_reordering_buffer	mbuffer.cpp	/^void alloc_ref_pic_list_reordering_buffer(Slice *currSlice)$/;"	f
alloc_storable_picture	mbuffer.cpp	/^StorablePicture* alloc_storable_picture(PictureStructure structure, int size_x, int size_y, int size_x_cr, int size_y_cr)$/;"	f
allrefzero	../inc/global.h	/^  int allrefzero;$/;"	m	struct:img_par
apply_weights	../inc/global.h	/^  unsigned int apply_weights;$/;"	m	struct:img_par
arideco_bits_read	biaridecod.cpp	/^int arideco_bits_read(DecodingEnvironmentPtr dep)$/;"	f
arideco_create_decoding_environment	biaridecod.cpp	/^DecodingEnvironmentPtr arideco_create_decoding_environment()$/;"	f
arideco_delete_decoding_environment	biaridecod.cpp	/^void arideco_delete_decoding_environment(DecodingEnvironmentPtr dep)$/;"	f
arideco_done_decoding	biaridecod.cpp	/^void arideco_done_decoding(DecodingEnvironmentPtr dep)$/;"	f
arideco_start_decoding	biaridecod.cpp	/^void arideco_start_decoding(DecodingEnvironmentPtr dep, unsigned char *cpixcode,$/;"	f
aspect_ratio_idc	../inc/parsetcommon.h	/^    unsigned  aspect_ratio_idc;                               \/\/ u(8)$/;"	m
aspect_ratio_info_present_flag	../inc/parsetcommon.h	/^  Boolean      aspect_ratio_info_present_flag;                   \/\/ u(1)$/;"	m
assignSE2partition	nal_part.cpp	/^int assignSE2partition[][SE_MAX_ELEMENTS] =$/;"	v
available	../inc/global.h	/^  int available;$/;"	m	struct:pix_pos
b8_type_contexts	../inc/global.h	/^  BiContextType b8_type_contexts [2][NUM_B8_TYPE_CTX];$/;"	m
b8mode	../inc/global.h	/^  int           b8mode[4];$/;"	m	struct:macroblock
b8pdir	../inc/global.h	/^  int           b8pdir[4];$/;"	m	struct:macroblock
bcbp_contexts	../inc/global.h	/^  BiContextType  bcbp_contexts[NUM_BLOCK_TYPES][NUM_BCBP_CTX];$/;"	m
biari_decode_final	biaridecod.cpp	/^unsigned int biari_decode_final(DecodingEnvironmentPtr dep)$/;"	f
biari_decode_symbol	biaridecod.cpp	/^unsigned int biari_decode_symbol(DecodingEnvironmentPtr dep, BiContextTypePtr bi_ct )$/;"	f
biari_decode_symbol_eq_prob	biaridecod.cpp	/^unsigned int biari_decode_symbol_eq_prob(DecodingEnvironmentPtr dep)$/;"	f
biari_init_context	biaridecod.cpp	/^void biari_init_context (struct img_par* img, BiContextTypePtr ctx, const int* ini)$/;"	f
binCount	biaridecod.cpp	/^int binCount = 0;$/;"	v
bit_rate_scale	../inc/parsetcommon.h	/^  unsigned  bit_rate_scale;                                   \/\/ u(4)$/;"	m
bit_rate_value	../inc/parsetcommon.h	/^    unsigned  bit_rate_value [MAXIMUMVALUEOFcpb_cnt];         \/\/ ue(v)$/;"	m
bitcounter	filehandle.cpp	/^static int bitcounter = 0;$/;"	v	file:
bitpattern	../inc/global.h	/^  unsigned int  bitpattern;            \/\/!< UVLC bitpattern$/;"	m	struct:syntaxelement
bits	annexb.cpp	/^FILE *bits = NULL;                \/\/!< the bit stream file$/;"	v
bits	global.cpp	/^FILE *bits;$/;"	v
bits	rtp.cpp	/^FILE *bits;$/;"	v
bitstream	../inc/global.h	/^  Bitstream           *bitstream;$/;"	m	struct:datapartition
bitstream_length	../inc/global.h	/^  int           bitstream_length;   \/\/!< over codebuffer lnegth, byte oriented, UVLC only$/;"	m
bitstream_restriction_flag	../inc/parsetcommon.h	/^  Boolean      bitstream_restriction_flag;                       \/\/ u(1)$/;"	m
block_x	../inc/global.h	/^  int block_x;$/;"	m	struct:img_par
block_y	../inc/global.h	/^  int block_y;$/;"	m	struct:img_par
bottom_field	../inc/mbuffer.h	/^  StorablePicture *bottom_field;$/;"	m	struct:frame_store
bottom_field	../inc/mbuffer.h	/^  struct storable_picture *bottom_field;  \/\/ for mb aff, if frame for referencing the bottom field$/;"	m	struct:storable_picture
bottom_field_flag	../inc/global.h	/^  unsigned int bottom_field_flag;$/;"	m	struct:img_par
bottom_poc	../inc/mbuffer.h	/^  int         bottom_poc;$/;"	m	struct:storable_picture
bottom_right	../inc/parsetcommon.h	/^      unsigned  bottom_right[MAXnum_slice_groups_minus1];     \/\/ ue(v)$/;"	m
bottompoc	../inc/global.h	/^           int bottompoc;   \/\/poc of bottom field of frame$/;"	m	struct:img_par
buf	../inc/nalucommon.h	/^  byte *buf;        \/\/! conjtains the first byte followed by the EBSP$/;"	m
buildPredRegionYUV	erc_do_p.cpp	/^static void buildPredRegionYUV(struct img_par *img, int32 *mv, int x, int y, byte *predMB)$/;"	f	file:
byte	../inc/global.h	/^typedef unsigned char   byte;                   \/\/!<  8 bit unsigned$/;"	t
c1isdc	cabac.cpp	/^static const int c1isdc       [] = { 1,  0,  1,  1,  1,  1,  1,  0};$/;"	v	file:
c_ipred_mode	../inc/global.h	/^  int           c_ipred_mode;       \/\/!< chroma intra prediction mode$/;"	m	struct:macroblock
cabac_new_slice	cabac.cpp	/^void cabac_new_slice()$/;"	f
cabac_startcode_follows	cabac.cpp	/^int cabac_startcode_follows(struct img_par *img, struct inp_par *inp, int eos_bit)$/;"	f
calc_buffer	leaky_bucket.cpp	/^void calc_buffer(struct inp_par *inp)$/;"	f
cbp	../inc/global.h	/^  int           cbp, cbp_blk ;$/;"	m	struct:macroblock
cbp_bits	../inc/global.h	/^  unsigned long cbp_bits;$/;"	m	struct:macroblock
cbp_blk	../inc/global.h	/^  int           cbp, cbp_blk ;$/;"	m	struct:macroblock
cbp_contexts	../inc/global.h	/^  BiContextType  cbp_contexts [3][NUM_CBP_CTX];$/;"	m
cc	../inc/rtp.h	/^  unsigned int cc;         \/*!< CSRC count, normally 0 in the absence $/;"	m
check_next_mb_and_get_field_mode_CABAC	cabac.cpp	/^int check_next_mb_and_get_field_mode_CABAC( SyntaxElement *se,$/;"	f
chroma_location_field	../inc/parsetcommon.h	/^    unsigned  chroma_location_field;                          \/\/ ue(v)$/;"	m
chroma_location_frame	../inc/parsetcommon.h	/^    unsigned  chroma_location_frame;                          \/\/ ue(v)$/;"	m
chroma_location_info_present_flag	../inc/parsetcommon.h	/^  Boolean      chroma_location_info_present_flag;                \/\/ u(1)$/;"	m
chroma_log2_weight_denom	../inc/global.h	/^  unsigned int chroma_log2_weight_denom;$/;"	m	struct:img_par
chroma_qp_index_offset	../inc/parsetcommon.h	/^  int       chroma_qp_index_offset;                           \/\/ se(v)$/;"	m
chroma_vector_adjustment	../inc/mbuffer.h	/^  int         chroma_vector_adjustment;$/;"	m	struct:storable_picture
cipr_contexts	../inc/global.h	/^  BiContextType  cipr_contexts[NUM_CIPR_CTX]; $/;"	m
clear_picture	output.cpp	/^void clear_picture(StorablePicture *p)$/;"	f
cod_counter	../inc/global.h	/^  int cod_counter;                            \/\/!< Current count of number of skipped macroblocks in a row$/;"	m	struct:img_par
code_from_bitstream_2d	vlc.cpp	/^int code_from_bitstream_2d(SyntaxElement *sym,  $/;"	f
code_len	../inc/global.h	/^  int           code_len;           \/\/!< overall codebuffer length, CABAC only$/;"	m
coded_frame	../inc/mbuffer.h	/^  int         coded_frame;$/;"	m	struct:storable_picture
cof	../inc/global.h	/^  int cof[4][6][4][4];                        \/\/!< correction coefficients from predicted$/;"	m	struct:img_par
cofu	../inc/global.h	/^  int cofu[4];$/;"	m	struct:img_par
colour_description_present_flag	../inc/parsetcommon.h	/^    Boolean      colour_description_present_flag;                \/\/ u(1)$/;"	m
colour_primaries	../inc/parsetcommon.h	/^      unsigned  colour_primaries;                             \/\/ u(8)$/;"	m
compare_fs_by_frame_num_desc	mbuffer.cpp	/^static int compare_fs_by_frame_num_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_fs_by_lt_pic_idx_asc	mbuffer.cpp	/^static int compare_fs_by_lt_pic_idx_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_fs_by_poc_asc	mbuffer.cpp	/^static int compare_fs_by_poc_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_fs_by_poc_desc	mbuffer.cpp	/^static int compare_fs_by_poc_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_lt_pic_num_asc	mbuffer.cpp	/^static int compare_pic_by_lt_pic_num_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_pic_num_desc	mbuffer.cpp	/^static int compare_pic_by_pic_num_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_poc_asc	mbuffer.cpp	/^static int compare_pic_by_poc_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_poc_desc	mbuffer.cpp	/^static int compare_pic_by_poc_desc( const void *arg1, const void *arg2 )$/;"	f	file:
concealBlocks	erc_do_i.cpp	/^static void concealBlocks( int lastColumn, int lastRow, int comp, frame *recfr, int32 picSizeX, int *condition )$/;"	f	file:
concealByCopy	erc_do_p.cpp	/^static int concealByCopy(frame *recfr, int currMBNum,$/;"	f	file:
concealByTrial	erc_do_p.cpp	/^static int concealByTrial(frame *recfr, byte *predMB, $/;"	f	file:
concealment	../inc/erc_api.h	/^  int   concealment;$/;"	m	struct:ercVariables_s
constrained_intra_pred_flag	../inc/global.h	/^  int constrained_intra_pred_flag;            \/\/!< if 1, prediction only from other Intra MBs$/;"	m	struct:img_par
constrained_intra_pred_flag	../inc/parsetcommon.h	/^  Boolean   constrained_intra_pred_flag;                      \/\/ u(1)$/;"	m
constrained_set0_flag	../inc/parsetcommon.h	/^  Boolean   constrained_set0_flag;                            \/\/ u(1)$/;"	m
constrained_set1_flag	../inc/parsetcommon.h	/^  Boolean   constrained_set1_flag;                            \/\/ u(1)$/;"	m
constrained_set2_flag	../inc/parsetcommon.h	/^  Boolean   constrained_set2_flag;                            \/\/ u(1)$/;"	m
context	../inc/global.h	/^  int           context;               \/\/!< CABAC context$/;"	m	struct:syntaxelement
convertYCbCr2RGB	output.cpp	/^void convertYCbCr2RGB( int Yin,int Cbin, int Crin, int *CurColor)$/;"	f
copyBetweenFrames	erc_do_p.cpp	/^static void copyBetweenFrames (frame *recfr, $/;"	f	file:
copyPredMB	erc_do_p.cpp	/^static void copyPredMB (int currYBlockNum, byte *predMB, frame *recfr, $/;"	f	file:
copyblock_sp	block.cpp	/^void copyblock_sp(struct img_par *img,int block_x,int block_y)$/;"	f
cpb_cnt	../inc/parsetcommon.h	/^  unsigned  cpb_cnt;                                          \/\/ ue(v)$/;"	m
cpb_removal_delay_length_minus1	../inc/parsetcommon.h	/^  unsigned  cpb_removal_delay_length_minus1;                  \/\/ u(5)$/;"	m
cpb_size_scale	../inc/parsetcommon.h	/^  unsigned  cpb_size_scale;                                   \/\/ u(4)$/;"	m
cpb_size_value	../inc/parsetcommon.h	/^    unsigned  cpb_size_value[MAXIMUMVALUEOFcpb_cnt];          \/\/ ue(v)$/;"	m
create_contexts_MotionInfo	cabac.cpp	/^MotionInfoContexts* create_contexts_MotionInfo(void)$/;"	f
create_contexts_TextureInfo	cabac.cpp	/^TextureInfoContexts* create_contexts_TextureInfo(void)$/;"	f
currSegment	../inc/erc_api.h	/^  int     currSegment;$/;"	m	struct:ercVariables_s
currSegmentCorrupted	../inc/erc_api.h	/^  int   currSegmentCorrupted;$/;"	m	struct:ercVariables_s
currentSlice	../inc/global.h	/^  Slice       *currentSlice;                   \/\/!< pointer to current Slice data struct$/;"	m	struct:img_par
current_mb_nr	../inc/global.h	/^  unsigned current_mb_nr; \/\/ bitstream order$/;"	m	struct:img_par
current_slice_nr	../inc/global.h	/^  int current_slice_nr;$/;"	m	struct:img_par
datapartition	../inc/global.h	/^typedef struct datapartition$/;"	s
de_cabac	../inc/global.h	/^  DecodingEnvironment de_cabac;$/;"	m	struct:datapartition
deblocking_filter_control_present_flag	../inc/parsetcommon.h	/^  Boolean   deblocking_filter_control_present_flag;           \/\/ u(1)$/;"	m
dec_picture	image.cpp	/^StorablePicture *dec_picture;$/;"	v
dec_ref_pic_marking	header.cpp	/^void dec_ref_pic_marking(Bitstream *currStream)$/;"	f
dec_ref_pic_marking_buffer	../inc/global.h	/^  DecRefPicMarking_t *dec_ref_pic_marking_buffer;                    \/\/!< stores the memory management control operations$/;"	m	struct:img_par
decode_field_slice	image.cpp	/^void decode_field_slice(struct img_par *img,struct inp_par *inp, int current_header)$/;"	f
decode_frame_slice	image.cpp	/^void decode_frame_slice(struct img_par *img,struct inp_par *inp, int current_header)$/;"	f
decode_ipcm_mb	macroblock.cpp	/^void decode_ipcm_mb(struct img_par *img)$/;"	f
decode_one_frame	image.cpp	/^int decode_one_frame(struct img_par *img,struct inp_par *inp, struct snr_par *snr)$/;"	f
decode_one_macroblock	macroblock.cpp	/^int decode_one_macroblock(struct img_par *img,struct inp_par *inp)$/;"	f
decode_one_slice	image.cpp	/^void decode_one_slice(struct img_par *img,struct inp_par *inp)$/;"	f
decoded_picture_buffer	../inc/mbuffer.h	/^typedef struct decoded_picture_buffer$/;"	s
decoding_poc	header.cpp	/^void decoding_poc(struct img_par *img)$/;"	f
delete_contexts_MotionInfo	cabac.cpp	/^void delete_contexts_MotionInfo(MotionInfoContexts *deco_ctx)$/;"	f
delete_contexts_TextureInfo	cabac.cpp	/^void delete_contexts_TextureInfo(TextureInfoContexts *deco_ctx)$/;"	f
delta_pic_order_always_zero_flag	../inc/global.h	/^  unsigned int delta_pic_order_always_zero_flag;$/;"	m	struct:img_par
delta_pic_order_always_zero_flag	../inc/parsetcommon.h	/^    Boolean delta_pic_order_always_zero_flag;               \/\/ u(1)$/;"	m
delta_pic_order_cnt	../inc/global.h	/^           int delta_pic_order_cnt[3];$/;"	m	struct:img_par
delta_pic_order_cnt_bottom	../inc/global.h	/^           int delta_pic_order_cnt_bottom;$/;"	m	struct:img_par
delta_qp_contexts	../inc/global.h	/^  BiContextType delta_qp_contexts[NUM_DELTA_QP_CTX];$/;"	m
delta_quant	../inc/global.h	/^  int           delta_quant;          \/\/!< for rate control$/;"	m	struct:macroblock
dequant_coef	../inc/macroblock.h	/^const int dequant_coef[6][4][4] = {$/;"	v
difference_of_pic_nums_minus1	../inc/global.h	/^  int difference_of_pic_nums_minus1;$/;"	m	struct:DecRefPicMarking_s
direct_8x8_inference_flag	../inc/parsetcommon.h	/^  Boolean   direct_8x8_inference_flag;                        \/\/ u(1)$/;"	m
direct_output	output.cpp	/^void direct_output(StorablePicture *p, FILE *p_out)$/;"	f
direct_type	../inc/global.h	/^  int direct_type;                          \/\/!< 1 for Spatial Direct, 0 for Temporal$/;"	m	struct:img_par
disposable_flag	../inc/global.h	/^  int disposable_flag;                          \/\/!< flag for disposable frame, 1:disposable$/;"	m	struct:img_par
dp_mode	../inc/global.h	/^  int                 dp_mode;       \/\/!< data partioning mode$/;"	m
dpb	mbuffer.cpp	/^DecodedPictureBuffer dpb;$/;"	v
dpb_combine_field	mbuffer.cpp	/^void dpb_combine_field(FrameStore *fs)$/;"	f
dpb_output_delay_length_minus1	../inc/parsetcommon.h	/^  unsigned  dpb_output_delay_length_minus1;                   \/\/ u(5)$/;"	m
dpb_size	../inc/global.h	/^  int dpb_size;                          \/\/!< Frame buffer size$/;"	m	struct:inp_par
dpb_split_field	mbuffer.cpp	/^void dpb_split_field(FrameStore *fs)$/;"	f
dump_dpb	mbuffer.cpp	/^void dump_dpb()$/;"	f
dumppoc	header.cpp	/^int dumppoc(struct img_par *img) {$/;"	f
ec_flag	errorconcealment.cpp	/^static int ec_flag[SE_MAX_ELEMENTS];        \/\/!< array to set errorconcealment$/;"	v	file:
edgeDistortion	erc_do_p.cpp	/^static int edgeDistortion (int predBlocks[], int currYBlockNum, byte *predMB, $/;"	f	file:
ei_flag	../inc/global.h	/^  int                 ei_flag;       \/\/!< 0 if the partArr[0] contains valid information$/;"	m
ei_flag	../inc/global.h	/^  int           ei_flag;            \/\/!< error indication, 0: no error, else unspecified error$/;"	m
ei_flag	../inc/global.h	/^  int           ei_flag;$/;"	m	struct:macroblock
endMBPos	../inc/erc_api.h	/^  int      endMBPos;$/;"	m	struct:ercSegment_s
entropy_coding_mode_flag	../inc/parsetcommon.h	/^  Boolean   entropy_coding_mode_flag;                         \/\/ u(1)$/;"	m
ercClose	erc_api.cpp	/^void ercClose( ercVariables_t *errorVar )$/;"	f
ercCollect8PredBlocks	erc_do_i.cpp	/^int ercCollect8PredBlocks( int predBlocks[], int currRow, int currColumn, int *condition, $/;"	f
ercCollectColumnBlocks	erc_do_i.cpp	/^int ercCollectColumnBlocks( int predBlocks[], int currRow, int currColumn, int *condition, int maxRow, int maxColumn, int step )$/;"	f
ercConcealInterFrame	erc_do_p.cpp	/^int ercConcealInterFrame(frame *recfr, objectBuffer_t *object_list, $/;"	f
ercConcealIntraFrame	erc_do_i.cpp	/^int ercConcealIntraFrame( frame *recfr, int32 picSizeX, int32 picSizeY, ercVariables_t *errorVar ) $/;"	f
ercInit	erc_api.cpp	/^void ercInit(int pic_sizex, int pic_sizey, int flag)$/;"	f
ercMarkCurrMBConcealed	erc_api.cpp	/^void ercMarkCurrMBConcealed( int currMBNum, int comp, int32 picSizeX, ercVariables_t *errorVar )$/;"	f
ercMarkCurrSegmentLost	erc_api.cpp	/^void ercMarkCurrSegmentLost(int32 picSizeX, ercVariables_t *errorVar )$/;"	f
ercMarkCurrSegmentOK	erc_api.cpp	/^void ercMarkCurrSegmentOK(int32 picSizeX, ercVariables_t *errorVar )$/;"	f
ercOpen	erc_api.cpp	/^ercVariables_t *ercOpen( void )$/;"	f
ercPixConcealIMB	erc_do_i.cpp	/^void ercPixConcealIMB(byte *currFrame, int row, int column, int predBlocks[], int frameWidth, int mbWidthInBlocks) $/;"	f
ercReset	erc_api.cpp	/^void ercReset( ercVariables_t *errorVar, int nOfMBs, int numOfSegments, int32 picSizeX )$/;"	f
ercSegment_s	../inc/erc_api.h	/^typedef struct ercSegment_s$/;"	s
ercSegment_t	../inc/erc_api.h	/^} ercSegment_t;$/;"	t
ercSetErrorConcealment	erc_api.cpp	/^void ercSetErrorConcealment( ercVariables_t *errorVar, int value )$/;"	f
ercStartSegment	erc_api.cpp	/^void ercStartSegment( int currMBNum, int segment, u_int32 bitPos, ercVariables_t *errorVar )$/;"	f
ercStopSegment	erc_api.cpp	/^void ercStopSegment( int currMBNum, int segment, u_int32 bitPos, ercVariables_t *errorVar )$/;"	f
ercVariables_s	../inc/erc_api.h	/^typedef struct ercVariables_s$/;"	s
ercVariables_t	../inc/erc_api.h	/^} ercVariables_t;$/;"	t
ercWriteMBMODEandMV	image.cpp	/^void ercWriteMBMODEandMV(struct img_par *img,struct inp_par *inp)$/;"	f
erc_errorVar	erc_api.cpp	/^ercVariables_t *erc_errorVar;$/;"	v
erc_img	erc_do_p.cpp	/^struct img_par *erc_img;$/;"	v
erc_mvperMB	erc_api.cpp	/^int erc_mvperMB;$/;"	v
erc_object_list	erc_api.cpp	/^objectBuffer_t *erc_object_list;$/;"	v
erc_recfr	erc_api.cpp	/^frame erc_recfr;$/;"	v
error	filehandle.cpp	/^void error(char *text, int code)$/;"	f
errortext	../inc/global.h	/^char errortext[ET_SIZE]; \/\/!< buffer for error message for exit with error()$/;"	v
errortext	global.cpp	/^char errortext[ET_SIZE]; \/\/!< buffer for error message for exit with error()$/;"	v
event_dump_one_frame_end	ldecod.cpp	/^sc_event event_dump_one_frame_end;$/;"	v
event_dump_one_frame_req	ldecod.cpp	/^sc_event event_dump_one_frame_req;$/;"	v
event_transaction_end	output.cpp	/^sc_event event_transaction_end;$/;"	v
event_transaction_req	output.cpp	/^sc_event event_transaction_req;$/;"	v
exit_frame	image.cpp	/^void exit_frame(struct img_par *img, struct inp_par *inp)$/;"	f
exit_macroblock	macroblock.cpp	/^int exit_macroblock(struct img_par *img,struct inp_par *inp,int eos_bit)$/;"	f
exp_golomb_decode_eq_prob	cabac.cpp	/^unsigned int exp_golomb_decode_eq_prob( DecodingEnvironmentPtr dep_dp,$/;"	f
explicit_B_prediction	../inc/global.h	/^  int explicit_B_prediction;$/;"	m	struct:img_par
fCorrupted	../inc/erc_api.h	/^  int      fCorrupted;$/;"	m	struct:ercSegment_s
fieldModeFilteringFlag	loopFilter.cpp	/^byte mixedModeEdgeFlag, fieldModeFilteringFlag;$/;"	v
field_anchor	../inc/global.h	/^  int **field_anchor;$/;"	m	struct:img_par
field_flag_inference	macroblock.cpp	/^void field_flag_inference()$/;"	f
field_pic_flag	../inc/global.h	/^  unsigned int field_pic_flag;$/;"	m	struct:img_par
field_postprocessing	image.cpp	/^void field_postprocessing(struct img_par *img, struct inp_par *inp)$/;"	f
fill_frame_num_gap	mbuffer.cpp	/^void fill_frame_num_gap(ImageParameters *img)$/;"	f
fill_wp_params	image.cpp	/^void fill_wp_params(struct img_par *img)$/;"	f
find_snr	image.cpp	/^void find_snr($/;"	f
fixed_frame_rate_flag	../inc/parsetcommon.h	/^    Boolean      fixed_frame_rate_flag;                          \/\/ u(1)$/;"	m
flag_1bit_bitstream_buff_low	ldecod.cpp	/^int flag_1bit_bitstream_buff_low;$/;"	v
flag_1bit_frame_done	ldecod.cpp	/^int flag_1bit_frame_done;$/;"	v
flag_3bit_frame_type	ldecod.cpp	/^int flag_3bit_frame_type;$/;"	v
flag_interrupt	ldecod.cpp	/^int flag_interrupt;$/;"	v
flag_start_dump_frame	ldecod.cpp	/^bool     flag_start_dump_frame;$/;"	v
fld_last_contexts	../inc/global.h	/^  BiContextType  fld_last_contexts[NUM_BLOCK_TYPES][NUM_LAST_CTX];$/;"	m
fld_map_contexts	../inc/global.h	/^  BiContextType  fld_map_contexts [NUM_BLOCK_TYPES][NUM_MAP_CTX];$/;"	m
flush_direct_output	output.cpp	/^void flush_direct_output(FILE *p_out)$/;"	f
flush_dpb	mbuffer.cpp	/^void flush_dpb()$/;"	f
flush_one_dpb	mbuffer.cpp	/^void flush_one_dpb()\/\/added by cyline$/;"	f
forbidden_bit	../inc/nalucommon.h	/^  int forbidden_bit;            \/\/! should be always FALSE$/;"	m
frame	../inc/erc_globals.h	/^} frame;$/;"	t
frame	../inc/mbuffer.h	/^  StorablePicture *frame;$/;"	m	struct:frame_store
frame	../inc/mbuffer.h	/^  struct storable_picture *frame;         \/\/ for mb aff, if field for referencing the combined frame$/;"	m	struct:storable_picture
frame_bitoffset	../inc/global.h	/^  int           frame_bitoffset;    \/\/!< actual position in the codebuffer, bit-oriented, UVLC only$/;"	m
frame_cropping_flag	../inc/parsetcommon.h	/^  Boolean   frame_cropping_flag;                              \/\/ u(1)$/;"	m
frame_cropping_rect_bottom_offset	../inc/parsetcommon.h	/^    unsigned  frame_cropping_rect_bottom_offset;              \/\/ ue(v)$/;"	m
frame_cropping_rect_left_offset	../inc/parsetcommon.h	/^    unsigned  frame_cropping_rect_left_offset;                \/\/ ue(v)$/;"	m
frame_cropping_rect_right_offset	../inc/parsetcommon.h	/^    unsigned  frame_cropping_rect_right_offset;               \/\/ ue(v)$/;"	m
frame_cropping_rect_top_offset	../inc/parsetcommon.h	/^    unsigned  frame_cropping_rect_top_offset;                 \/\/ ue(v)$/;"	m
frame_mbs_only_flag	../inc/parsetcommon.h	/^  Boolean   frame_mbs_only_flag;                              \/\/ u(1)$/;"	m
frame_no	../inc/global.h	/^int  frame_no;$/;"	v
frame_no	global.cpp	/^int  frame_no;$/;"	v
frame_num	../inc/global.h	/^  unsigned int frame_num;   \/\/frame_num for this frame$/;"	m	struct:img_par
frame_num	../inc/mbuffer.h	/^  unsigned  frame_num;$/;"	m	struct:frame_store
frame_num_wrap	../inc/mbuffer.h	/^  int       frame_num_wrap;$/;"	m	struct:frame_store
frame_postprocessing	image.cpp	/^void frame_postprocessing(struct img_par *img, struct inp_par *inp)$/;"	f
frame_store	../inc/mbuffer.h	/^typedef struct frame_store$/;"	s
framepoc	../inc/global.h	/^           int framepoc;    \/\/poc of this frame \/\/ POC200301$/;"	m	struct:img_par
free_Partition	nal_part.cpp	/^void free_Partition(Bitstream *currStream)$/;"	f
free_dpb	mbuffer.cpp	/^void free_dpb()$/;"	f
free_frame_store	mbuffer.cpp	/^void free_frame_store(FrameStore* f)$/;"	f
free_global_buffers	ldecod.cpp	/^void free_global_buffers(struct inp_par *inp, struct img_par *img)$/;"	f
free_mem2D	memalloc.cpp	/^void free_mem2D(byte **array2D)$/;"	f
free_mem2Dint	memalloc.cpp	/^void free_mem2Dint(int **array2D)$/;"	f
free_mem2Dint64	memalloc.cpp	/^void free_mem2Dint64(int64 **array2D)$/;"	f
free_mem3D	memalloc.cpp	/^void free_mem3D(byte ***array3D, int frames)$/;"	f
free_mem3Dint	memalloc.cpp	/^void free_mem3Dint(int ***array3D, int frames)$/;"	f
free_mem3Dint64	memalloc.cpp	/^void free_mem3Dint64(int64 ***array3D, int frames)$/;"	f
free_mem4Dint	memalloc.cpp	/^void free_mem4Dint(int ****array4D, int idx, int frames )$/;"	f
free_ref_pic_list_reordering_buffer	mbuffer.cpp	/^void free_ref_pic_list_reordering_buffer(Slice *currSlice)$/;"	f
free_slice	ldecod.cpp	/^void free_slice(struct inp_par *inp, struct img_par *img)$/;"	f
free_storable_picture	mbuffer.cpp	/^void free_storable_picture(StorablePicture* p)$/;"	f
fs	../inc/mbuffer.h	/^  FrameStore  **fs;$/;"	m	struct:decoded_picture_buffer
fs_ltref	../inc/mbuffer.h	/^  FrameStore  **fs_ltref;$/;"	m	struct:decoded_picture_buffer
fs_ref	../inc/mbuffer.h	/^  FrameStore  **fs_ref;$/;"	m	struct:decoded_picture_buffer
g_new_frame	../inc/global.h	/^int g_new_frame;$/;"	v
g_new_frame	global.cpp	/^int g_new_frame;$/;"	v
gaps_in_frame_num_value_allowed_flag	../inc/parsetcommon.h	/^  Boolean   gaps_in_frame_num_value_allowed_flag;             \/\/ u(1)$/;"	m
gen_pic_list_from_frame_list	mbuffer.cpp	/^static void gen_pic_list_from_frame_list(PictureStructure currStrcture, FrameStore **fs_list, int list_idx, StorablePicture **list, int *list_size, int long_term)$/;"	f	file:
getAffNeighbour	mb_access.cpp	/^void getAffNeighbour(int curr_mb_nr, int xN, int yN, int luma, PixelPos *pix)$/;"	f
getChroma4x4Neighbour	mb_access.cpp	/^void getChroma4x4Neighbour (int curr_mb_nr, int block_x, int block_y, int rel_x, int rel_y, PixelPos *pix)$/;"	f
getDpbSize	mbuffer.cpp	/^int getDpbSize()$/;"	f
getLuma4x4Neighbour	mb_access.cpp	/^void getLuma4x4Neighbour (int curr_mb_nr, int block_x, int block_y, int rel_x, int rel_y, PixelPos *pix)$/;"	f
getNeighbour	mb_access.cpp	/^void getNeighbour(int curr_mb_nr, int xN, int yN, int luma, PixelPos *pix)$/;"	f
getNonAffNeighbour	mb_access.cpp	/^void getNonAffNeighbour(int curr_mb_nr, int xN, int yN, int luma, PixelPos *pix)$/;"	f
getParam	../inc/erc_do.h	38;"	d
get_block	image.cpp	/^void get_block(int ref_frame, StorablePicture **list, int x_pos, int y_pos, struct img_par *img, int block[BLOCK_SIZE][BLOCK_SIZE])$/;"	f
get_byte	biaridecod.cpp	134;"	d	file:
get_concealed_element	errorconcealment.cpp	/^int get_concealed_element(SyntaxElement *sym)$/;"	f
get_long_term_pic	mbuffer.cpp	/^static StorablePicture*  get_long_term_pic(int LongtermPicNum)$/;"	f	file:
get_mb_block_pos	mb_access.cpp	/^void get_mb_block_pos (int mb_addr, int *x, int*y)$/;"	f
get_mb_pos	mb_access.cpp	/^void get_mb_pos (int mb_addr, int *x, int*y)$/;"	f
get_mem2D	memalloc.cpp	/^int get_mem2D(byte ***array2D, int rows, int columns)$/;"	f
get_mem2Dint	memalloc.cpp	/^int get_mem2Dint(int ***array2D, int rows, int columns)$/;"	f
get_mem2Dint64	memalloc.cpp	/^int get_mem2Dint64(int64 ***array2D, int rows, int columns)$/;"	f
get_mem3D	memalloc.cpp	/^int get_mem3D(byte ****array3D, int frames, int rows, int columns)$/;"	f
get_mem3Dint	memalloc.cpp	/^int get_mem3Dint(int ****array3D, int frames, int rows, int columns)$/;"	f
get_mem3Dint64	memalloc.cpp	/^int get_mem3Dint64(int64 ****array3D, int frames, int rows, int columns)$/;"	f
get_mem4Dint	memalloc.cpp	/^int get_mem4Dint(int *****array4D, int idx, int frames, int rows, int columns )$/;"	f
get_pic_num_x	mbuffer.cpp	/^static int get_pic_num_x (StorablePicture *p, int difference_of_pic_nums_minus1)$/;"	f	file:
get_short_term_pic	mbuffer.cpp	/^static StorablePicture*  get_short_term_pic(int picNum)$/;"	f	file:
get_smallest_poc	mbuffer.cpp	/^static void get_smallest_poc(int *poc,int * pos)$/;"	f	file:
global_init_done	ldecod.cpp	/^int global_init_done = 0;$/;"	v
height	../inc/global.h	/^  int height;$/;"	m	struct:img_par
height_cr	../inc/global.h	/^  int height_cr;                              \/\/!< height chroma$/;"	m	struct:img_par
hrd_parameters_t	../inc/parsetcommon.h	/^} hrd_parameters_t;$/;"	t
i16mode	../inc/global.h	/^  int           i16mode;$/;"	m	struct:macroblock
idr_flag	../inc/global.h	/^  int idr_flag;$/;"	m	struct:img_par
idr_memory_management	mbuffer.cpp	/^static void idr_memory_management(StorablePicture* p)$/;"	f	file:
idr_pic_id	../inc/global.h	/^  int idr_pic_id;$/;"	m	struct:img_par
idr_psnr_number	../inc/global.h	/^  int idr_psnr_number;$/;"	m	struct:img_par
img	ldecod.cpp	/^struct img_par    *img;         \/\/!< image parameters$/;"	v
imgUV	../inc/mbuffer.h	/^  byte ***    imgUV;         \/\/!< U and V picture components$/;"	m	struct:storable_picture
imgUV_ref	../inc/global.h	/^byte ***imgUV_ref;$/;"	v
imgUV_ref	global.cpp	/^byte ***imgUV_ref;$/;"	v
imgY	../inc/mbuffer.h	/^  byte **     imgY;          \/\/!< Y picture component$/;"	m	struct:storable_picture
imgY_ref	../inc/global.h	/^byte **imgY_ref;                                \/\/!< reference frame find snr$/;"	v
imgY_ref	global.cpp	/^byte **imgY_ref;                                \/\/!< reference frame find snr$/;"	v
img_par	../inc/global.h	/^typedef struct img_par$/;"	s
inf	../inc/global.h	/^  int           inf;                   \/\/!< info part of UVLC code$/;"	m	struct:syntaxelement
infile	../inc/global.h	/^  char *infile;                       \/\/!< Telenor H.26L input$/;"	m	struct:inp_par
init	ldecod.cpp	/^void init(struct img_par *img)  \/\/!< image parameters$/;"	f
init_bottom	image.cpp	/^void init_bottom(struct img_par *img, struct inp_par *inp)$/;"	f
init_conf	ldecod.cpp	/^void init_conf(struct inp_par *inp,$/;"	f
init_conf2	ldecod.cpp	/^void init_conf2(struct inp_par *inp)$/;"	f
init_contexts	context_ini.cpp	/^init_contexts (struct img_par* img)$/;"	f
init_decoding_engine_IPCM	macroblock.cpp	/^void init_decoding_engine_IPCM(struct img_par *img)$/;"	f
init_done	../inc/mbuffer.h	/^  int           init_done;$/;"	m	struct:decoded_picture_buffer
init_dpb	mbuffer.cpp	/^void init_dpb()$/;"	f
init_frame	image.cpp	/^void init_frame(struct img_par *img, struct inp_par *inp)$/;"	f
init_global_buffers	ldecod.cpp	/^int init_global_buffers(struct inp_par *inp, struct img_par *img)$/;"	f
init_lists	mbuffer.cpp	/^void init_lists(int currSliceType, PictureStructure currPicStructure)$/;"	f
init_macroblock	macroblock.cpp	/^void init_macroblock(struct img_par *img)$/;"	f
init_mbaff_lists	mbuffer.cpp	/^void init_mbaff_lists()$/;"	f
init_out_buffer	output.cpp	/^void init_out_buffer()$/;"	f
init_top	image.cpp	/^void init_top(struct img_par *img, struct inp_par *inp)$/;"	f
initial_cpb_removal_delay_length_minus1	../inc/parsetcommon.h	/^  unsigned  initial_cpb_removal_delay_length_minus1;          \/\/ u(5)$/;"	m
inp_par	../inc/global.h	/^struct inp_par$/;"	s
input	ldecod.cpp	/^struct inp_par    *input;       \/\/!< input parameters from input configuration file$/;"	v
insert_picture_in_dpb	mbuffer.cpp	/^static void insert_picture_in_dpb(FrameStore* fs, StorablePicture* p)$/;"	f	file:
int32	../inc/global.h	/^typedef int             int32;$/;"	t
int64	../inc/global.h	/^  typedef __int64   int64;$/;"	t
int64	../inc/global.h	/^  typedef long long int64;$/;"	t
interpret_buffering_period_info	sei.cpp	/^void interpret_buffering_period_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_dec_ref_pic_marking_repetition_info	sei.cpp	/^void interpret_dec_ref_pic_marking_repetition_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_filler_payload_info	sei.cpp	/^void interpret_filler_payload_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_full_frame_freeze_info	sei.cpp	/^void interpret_full_frame_freeze_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_full_frame_freeze_release_info	sei.cpp	/^void interpret_full_frame_freeze_release_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_full_frame_snapshot_info	sei.cpp	/^void interpret_full_frame_snapshot_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_mb_mode_B	macroblock.cpp	/^void interpret_mb_mode_B(struct img_par *img)$/;"	f
interpret_mb_mode_I	macroblock.cpp	/^void interpret_mb_mode_I(struct img_par *img)$/;"	f
interpret_mb_mode_P	macroblock.cpp	/^void interpret_mb_mode_P(struct img_par *img)$/;"	f
interpret_mb_mode_SI	macroblock.cpp	/^void interpret_mb_mode_SI(struct img_par *img)$/;"	f
interpret_motion_constrained_slice_group_set_info	sei.cpp	/^void interpret_motion_constrained_slice_group_set_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_pan_scan_rect_info	sei.cpp	/^void interpret_pan_scan_rect_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_picture_timing_info	sei.cpp	/^void interpret_picture_timing_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_progressive_refinement_end_info	sei.cpp	/^void interpret_progressive_refinement_end_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_progressive_refinement_start_info	sei.cpp	/^void interpret_progressive_refinement_start_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_random_access_info	sei.cpp	/^void interpret_random_access_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_reserved_info	sei.cpp	/^void interpret_reserved_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_scene_information	sei.cpp	/^void interpret_scene_information( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_spare_pic	sei.cpp	/^void interpret_spare_pic( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_subsequence_characteristics_info	sei.cpp	/^void interpret_subsequence_characteristics_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_subsequence_info	sei.cpp	/^void interpret_subsequence_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_subsequence_layer_characteristics_info	sei.cpp	/^void interpret_subsequence_layer_characteristics_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_user_data_registered_itu_t_t35_info	sei.cpp	/^void interpret_user_data_registered_itu_t_t35_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_user_data_unregistered_info	sei.cpp	/^void interpret_user_data_unregistered_info( byte* payload, int size, ImageParameters *img )$/;"	f
intra_block	../inc/global.h	/^  int           intra_block[MAX_MB_WIDTH * MAX_MB_HEIGHT];$/;"	m	struct:img_par
intra_block	../inc/global.h	/^  int  *intra_block;$/;"	m	struct:img_par
intrapred	block.cpp	/^int intrapred($/;"	f
intrapred_chroma	block.cpp	/^void intrapred_chroma(struct img_par *img, int uv)$/;"	f
intrapred_luma_16x16	block.cpp	/^int intrapred_luma_16x16(struct img_par *img, \/\/!< image parameters$/;"	f
ipr_contexts	../inc/global.h	/^  BiContextType  ipr_contexts [NUM_IPR_CTX];$/;"	m
ipredmode	../inc/global.h	/^  int           ipredmode[MAX_WIDTH \/ BLOCK_SIZE][MAX_HEIGHT \/ BLOCK_SIZE];$/;"	m	struct:img_par
ipredmode	../inc/global.h	/^  int  **ipredmode;                            \/\/!< prediction type$/;"	m	struct:img_par
isBlock	../inc/erc_do.h	32;"	d
isSplitted	../inc/erc_do.h	28;"	d
is_intra_block	../inc/global.h	/^  int is_intra_block;$/;"	m	struct:img_par
is_long_ref	mbuffer.cpp	/^int is_long_ref(StorablePicture *s)$/;"	f
is_long_term	../inc/mbuffer.h	/^  int         is_long_term;$/;"	m	struct:storable_picture
is_long_term	../inc/mbuffer.h	/^  int       is_long_term;           \/\/!< 0=not used for ref; 1=top used; 2=bottom used; 3=both fields (or frame) used$/;"	m	struct:frame_store
is_long_term_reference	mbuffer.cpp	/^static int is_long_term_reference(FrameStore* fs)$/;"	f	file:
is_non_existent	../inc/mbuffer.h	/^  int       is_non_existent;$/;"	m	struct:frame_store
is_output	../inc/mbuffer.h	/^  int         is_output;$/;"	m	struct:storable_picture
is_output	../inc/mbuffer.h	/^  int       is_output;$/;"	m	struct:frame_store
is_reference	../inc/mbuffer.h	/^  int       is_reference;           \/\/!< 0=not used for ref; 1=top used; 2=bottom used; 3=both fields (or frame) used$/;"	m	struct:frame_store
is_short_ref	mbuffer.cpp	/^int is_short_ref(StorablePicture *s)$/;"	f
is_short_term_reference	mbuffer.cpp	/^static int is_short_term_reference(FrameStore* fs)$/;"	f	file:
is_skip	../inc/global.h	/^  int           is_skip;$/;"	m	struct:macroblock
is_used	../inc/mbuffer.h	/^  int       is_used;                \/\/!< 0=empty; 1=top; 2=bottom; 3=both fields (or frame)$/;"	m	struct:frame_store
is_used_for_reference	mbuffer.cpp	/^static int is_used_for_reference(FrameStore* fs)$/;"	f	file:
is_v_block	../inc/global.h	/^  int is_v_block;$/;"	m	struct:img_par
itrans	block.cpp	/^void itrans(struct img_par *img, \/\/!< image parameters$/;"	f
itrans_2	block.cpp	/^void itrans_2($/;"	f
itrans_sp	block.cpp	/^void itrans_sp(struct img_par *img,  \/\/!< image parameters$/;"	f
itrans_sp_chroma	block.cpp	/^void itrans_sp_chroma(struct img_par *img,int ll)$/;"	f
k	../inc/global.h	/^  int           k;                     \/\/!< CABAC context for coeff_count,uv$/;"	m	struct:syntaxelement
last_contexts	../inc/global.h	/^  BiContextType  last_contexts[NUM_BLOCK_TYPES][NUM_LAST_CTX];$/;"	m
last_dquant	cabac.cpp	/^int last_dquant = 0;$/;"	v
last_has_mmco_5	../inc/global.h	/^  int last_has_mmco_5;$/;"	m	struct:img_par
last_output_poc	../inc/mbuffer.h	/^  int           last_output_poc;$/;"	m	struct:decoded_picture_buffer
last_pic_bottom_field	../inc/global.h	/^  int last_pic_bottom_field;$/;"	m	struct:img_par
last_picture	../inc/mbuffer.h	/^  FrameStore   *last_picture;$/;"	m	struct:decoded_picture_buffer
ldecode	ldecod.cpp	/^int ldecode(int argc, char **argv, void *tb)$/;"	f
len	../inc/global.h	/^  int           len;                   \/\/!< length of code$/;"	m	struct:syntaxelement
len	../inc/nalucommon.h	/^  unsigned len;                 \/\/! Length of the NAL unit (Excluding the start code, which does not belong to the NALU)$/;"	m
level_idc	../inc/parsetcommon.h	/^  unsigned  level_idc;                                        \/\/ u(8)$/;"	m
linfo_cbp_inter	vlc.cpp	/^void linfo_cbp_inter(int len,int info,int *cbp, int *dummy)$/;"	f
linfo_cbp_intra	vlc.cpp	/^void linfo_cbp_intra(int len,int info,int *cbp, int *dummy)$/;"	f
linfo_levrun_c2x2	vlc.cpp	/^void linfo_levrun_c2x2(int len, int info, int *level, int *irun)$/;"	f
linfo_levrun_inter	vlc.cpp	/^void linfo_levrun_inter(int len, int info, int *level, int *irun)$/;"	f
linfo_se	vlc.cpp	/^void linfo_se(int len,  int info, int *value1, int *dummy)$/;"	f
linfo_ue	vlc.cpp	/^void linfo_ue(int len, int info, int *value1, int *dummy)$/;"	f
listX	mbuffer.cpp	/^StorablePicture **listX[6];$/;"	v
listXsize	mbuffer.cpp	/^int listXsize[6];$/;"	v
log2_max_frame_num_minus4	../inc/parsetcommon.h	/^  unsigned  log2_max_frame_num_minus4;                        \/\/ ue(v)$/;"	m
log2_max_mv_length_horizontal	../inc/parsetcommon.h	/^    unsigned  log2_max_mv_length_horizontal;                  \/\/ ue(v)$/;"	m
log2_max_mv_length_vertical	../inc/parsetcommon.h	/^    unsigned  log2_max_mv_length_vertical;                    \/\/ ue(v)$/;"	m
log2_max_pic_order_cnt_lsb_minus4	../inc/parsetcommon.h	/^  unsigned log2_max_pic_order_cnt_lsb_minus4;                 \/\/ ue(v)$/;"	m
long_term_frame_idx	../inc/global.h	/^  int long_term_frame_idx;$/;"	m	struct:DecRefPicMarking_s
long_term_frame_idx	../inc/mbuffer.h	/^  int         long_term_frame_idx;$/;"	m	struct:storable_picture
long_term_frame_idx	../inc/mbuffer.h	/^  int       long_term_frame_idx;$/;"	m	struct:frame_store
long_term_pic_idx_l0	../inc/global.h	/^  int                 *long_term_pic_idx_l0;$/;"	m
long_term_pic_idx_l1	../inc/global.h	/^  int                 *long_term_pic_idx_l1;$/;"	m
long_term_pic_num	../inc/global.h	/^  int long_term_pic_num;$/;"	m	struct:DecRefPicMarking_s
long_term_pic_num	../inc/mbuffer.h	/^  int         long_term_pic_num;$/;"	m	struct:storable_picture
long_term_reference_flag	../inc/global.h	/^  int long_term_reference_flag;$/;"	m	struct:img_par
low_delay_hrd_flag	../inc/parsetcommon.h	/^    Boolean      low_delay_hrd_flag;                             \/\/ u(1)$/;"	m
ltref_frames_in_buffer	../inc/mbuffer.h	/^  unsigned      ltref_frames_in_buffer;$/;"	m	struct:decoded_picture_buffer
luma_log2_weight_denom	../inc/global.h	/^  unsigned int luma_log2_weight_denom;$/;"	m	struct:img_par
m	../inc/rtp.h	/^  unsigned int m;          \/\/!< Marker bit$/;"	m
m7	../inc/global.h	/^  int m7[16][16];                             \/\/!< final 4x4 block. Extended to 16x16 for ABT$/;"	m	struct:img_par
mabs	../inc/erc_api.h	38;"	d
macroblock	../inc/global.h	/^typedef struct macroblock$/;"	s
malloc_slice	ldecod.cpp	/^void malloc_slice(struct inp_par *inp, struct img_par *img)$/;"	f
map_contexts	../inc/global.h	/^  BiContextType  map_contexts [NUM_BLOCK_TYPES][NUM_MAP_CTX];$/;"	m
mapping	../inc/global.h	/^  void    (*mapping)(int len, int info, int *value1, int *value2);$/;"	m	struct:syntaxelement
mark_pic_long_term	mbuffer.cpp	/^static void mark_pic_long_term(StorablePicture* p, int long_term_frame_idx, int picNumX)$/;"	f	file:
matrix_coefficients	../inc/parsetcommon.h	/^      unsigned  matrix_coefficients;                          \/\/ u(8)$/;"	m
max	../inc/defines.h	125;"	d
max_bits_per_mb_denom	../inc/parsetcommon.h	/^    unsigned  max_bits_per_mb_denom;                          \/\/ ue(v)$/;"	m
max_bytes_per_pic_denom	../inc/parsetcommon.h	/^    unsigned  max_bytes_per_pic_denom;                        \/\/ ue(v)$/;"	m
max_dec_frame_buffering	../inc/parsetcommon.h	/^    unsigned  max_dec_frame_buffering;                        \/\/ ue(v)$/;"	m
max_dec_frame_reordering	../inc/parsetcommon.h	/^    unsigned  max_dec_frame_reordering;                       \/\/ ue(v)$/;"	m
max_long_term_frame_idx_plus1	../inc/global.h	/^  int max_long_term_frame_idx_plus1;$/;"	m	struct:DecRefPicMarking_s
max_long_term_pic_idx	../inc/mbuffer.h	/^  int           max_long_term_pic_idx;$/;"	m	struct:decoded_picture_buffer
max_part_nr	../inc/global.h	/^  int                 max_part_nr;$/;"	m
max_size	../inc/nalucommon.h	/^  unsigned max_size;            \/\/! Nal Unit Buffer size$/;"	m
maxpos	cabac.cpp	/^static const int maxpos       [] = {16, 15, 64, 32, 32, 16,  4, 15};$/;"	v	file:
mbAddrA	../inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAddrB	../inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAddrC	../inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAddrD	../inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAvailA	../inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mbAvailB	../inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mbAvailC	../inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mbAvailD	../inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mb_adaptive_frame_field_flag	../inc/mbuffer.h	/^  int         mb_adaptive_frame_field_flag;$/;"	m	struct:storable_picture
mb_adaptive_frame_field_flag	../inc/parsetcommon.h	/^    Boolean   mb_adaptive_frame_field_flag;                   \/\/ u(1)$/;"	m
mb_addr	../inc/global.h	/^  int mb_addr;$/;"	m	struct:pix_pos
mb_aff_contexts	../inc/global.h	/^  BiContextType mb_aff_contexts  [NUM_MB_AFF_CTX];$/;"	m
mb_available_left	../inc/global.h	/^  struct macroblock   *mb_available_left; \/\/!< pointer to neighboring MB (CABAC)$/;"	m	struct:macroblock
mb_available_up	../inc/global.h	/^  struct macroblock   *mb_available_up;   \/\/!< pointer to neighboring MB (CABAC)$/;"	m	struct:macroblock
mb_data	../inc/global.h	/^  Macroblock          *mb_data;                \/\/!< array containing all MBs of a whole frame$/;"	m	struct:img_par
mb_data	../inc/global.h	/^  Macroblock    mb_data[MAX_MB_WIDTH * MAX_MB_HEIGHT]; $/;"	m	struct:img_par
mb_field	../inc/global.h	/^  int           mb_field;$/;"	m	struct:macroblock
mb_field	../inc/mbuffer.h	/^  byte *      mb_field;      \/\/!< field macroblock indicator$/;"	m	struct:storable_picture
mb_is_available	mb_access.cpp	/^int mb_is_available(int mbAddr, int currMbAddr)$/;"	f
mb_type	../inc/global.h	/^  int           mb_type;$/;"	m	struct:macroblock
mb_type_contexts	../inc/global.h	/^  BiContextType mb_type_contexts [4][NUM_MB_TYPE_CTX];$/;"	m
mb_x	../inc/global.h	/^  int mb_x;$/;"	m	struct:img_par
mb_y	../inc/global.h	/^  int mb_y;$/;"	m	struct:img_par
memory_management_control_operation	../inc/global.h	/^  int memory_management_control_operation;$/;"	m	struct:DecRefPicMarking_s
min	../inc/defines.h	126;"	d
mixedModeEdgeFlag	loopFilter.cpp	/^byte mixedModeEdgeFlag, fieldModeFilteringFlag;$/;"	v
mm_assign_long_term_frame_idx	mbuffer.cpp	/^static void mm_assign_long_term_frame_idx(StorablePicture* p, int difference_of_pic_nums_minus1, int long_term_frame_idx)$/;"	f	file:
mm_mark_current_picture_long_term	mbuffer.cpp	/^static void mm_mark_current_picture_long_term(StorablePicture *p, int long_term_frame_idx)$/;"	f	file:
mm_unmark_all_long_term_for_reference	mbuffer.cpp	/^static void mm_unmark_all_long_term_for_reference ()$/;"	f	file:
mm_unmark_all_short_term_for_reference	mbuffer.cpp	/^static void mm_unmark_all_short_term_for_reference ()$/;"	f	file:
mm_unmark_long_term_for_reference	mbuffer.cpp	/^static void mm_unmark_long_term_for_reference(StorablePicture *p, int long_term_pic_num)$/;"	f	file:
mm_unmark_short_term_for_reference	mbuffer.cpp	/^static void mm_unmark_short_term_for_reference(StorablePicture *p, int difference_of_pic_nums_minus1)$/;"	f	file:
mm_update_max_long_term_frame_idx	mbuffer.cpp	/^void mm_update_max_long_term_frame_idx(int max_long_term_frame_idx_plus1)$/;"	f
mmax	../inc/erc_api.h	39;"	d
mmin	../inc/erc_api.h	40;"	d
model_number	../inc/global.h	/^  int model_number;$/;"	m	struct:img_par
more_rbsp_data	vlc.cpp	/^int more_rbsp_data (byte buffer[],int totbitoffset,int bytecount)$/;"	f
mot_ctx	../inc/global.h	/^  MotionInfoContexts  *mot_ctx;      \/\/!< pointer to struct of context models for use in CABAC$/;"	m
motion_vectors_over_pic_boundaries_flag	../inc/parsetcommon.h	/^    Boolean      motion_vectors_over_pic_boundaries_flag;        \/\/ u(1)$/;"	m
moving_block	../inc/mbuffer.h	/^  byte **     moving_block;$/;"	m	struct:storable_picture
mpr	../inc/global.h	/^  int mpr[16][16];                            \/\/!< predicted block$/;"	m	struct:img_par
mv	../inc/erc_globals.h	/^  int32 mv[3];      \/* motion vectors in 1\/4 pixel units: mvx = mv[0], mvy = mv[1], $/;"	m
mv	../inc/mbuffer.h	/^  int  ****   mv;            \/\/!< motion vector       [list][subblock_x][subblock_y][component]$/;"	m	struct:storable_picture
mv_res_contexts	../inc/global.h	/^  BiContextType mv_res_contexts  [2][NUM_MV_RES_CTX];$/;"	m
mvd	../inc/global.h	/^  int           mvd[2][BLOCK_MULTIPLE][BLOCK_MULTIPLE][2];      \/\/!< indices correspond to [forw,backw][block_y][block_x][x,y]$/;"	m	struct:macroblock
nOfCorruptedSegments	../inc/erc_api.h	/^  int   nOfCorruptedSegments;$/;"	m	struct:ercVariables_s
nOfMBs	../inc/erc_api.h	/^  int   nOfMBs;$/;"	m	struct:ercVariables_s
nOfSegments	../inc/erc_api.h	/^  int     nOfSegments;$/;"	m	struct:ercVariables_s
nal_hrd_parameters	../inc/parsetcommon.h	/^    hrd_parameters_t nal_hrd_parameters;                      \/\/ hrd_paramters_t$/;"	m
nal_hrd_parameters_present_flag	../inc/parsetcommon.h	/^  Boolean      nal_hrd_parameters_present_flag;                  \/\/ u(1)$/;"	m
nal_reference_idc	../inc/global.h	/^  int nal_reference_idc;                       \/\/!< nal_reference_idc from NAL unit$/;"	m	struct:img_par
nal_reference_idc	../inc/nalucommon.h	/^  int nal_reference_idc;        \/\/! NALU_PRIORITY_xxxx$/;"	m
nal_startcode_follows	../inc/global.h	/^int  (*nal_startcode_follows) ();$/;"	v
nal_startcode_follows	global.cpp	/^int  (*nal_startcode_follows) (struct img_par *, struct inp_par *, int);$/;"	v
nal_unit_type	../inc/nalucommon.h	/^  int nal_unit_type;            \/\/! NALU_TYPE_xxxx$/;"	m
next_header	../inc/global.h	/^  int                 next_header;$/;"	m
no_mem_exit	memalloc.cpp	/^void no_mem_exit(char *where)$/;"	f
no_output_of_prior_pics_flag	../inc/global.h	/^  int no_output_of_prior_pics_flag;$/;"	m	struct:img_par
non_existing	../inc/mbuffer.h	/^  int         non_existing;$/;"	m	struct:storable_picture
num_dec_mb	../inc/global.h	/^  unsigned num_dec_mb;$/;"	m	struct:img_par
num_pending_frame	ldecod.cpp	/^unsigned int  num_pending_frame;$/;"	v
num_ref_frames	../inc/parsetcommon.h	/^  unsigned  num_ref_frames;                                   \/\/ ue(v)$/;"	m
num_ref_frames_in_pic_order_cnt_cycle	../inc/global.h	/^  unsigned int num_ref_frames_in_pic_order_cnt_cycle;$/;"	m	struct:img_par
num_ref_frames_in_pic_order_cnt_cycle	../inc/parsetcommon.h	/^    unsigned  num_ref_frames_in_pic_order_cnt_cycle;          \/\/ ue(v)$/;"	m
num_ref_idx_l0_active	../inc/global.h	/^  int num_ref_idx_l0_active;             \/\/!< number of forward reference$/;"	m	struct:img_par
num_ref_idx_l0_active_minus1	../inc/parsetcommon.h	/^  unsigned  num_ref_idx_l0_active_minus1;                     \/\/ ue(v)$/;"	m
num_ref_idx_l1_active	../inc/global.h	/^  int num_ref_idx_l1_active;             \/\/!< number of backward reference$/;"	m	struct:img_par
num_ref_idx_l1_active_minus1	../inc/parsetcommon.h	/^  unsigned  num_ref_idx_l1_active_minus1;                     \/\/ ue(v)$/;"	m
num_slice_group_map_units_minus1	../inc/parsetcommon.h	/^      unsigned  num_slice_group_map_units_minus1;             \/\/ ue(v)$/;"	m
num_slice_groups_minus1	../inc/parsetcommon.h	/^  unsigned  num_slice_groups_minus1;                          \/\/ ue(v)$/;"	m
num_units_in_tick	../inc/parsetcommon.h	/^    unsigned  num_units_in_tick;                              \/\/ u(32)$/;"	m
number	../inc/global.h	/^  int number;                                 \/\/!< frame number$/;"	m	struct:img_par
nz_coeff	../inc/global.h	/^  int           nz_coeff[MAX_MB_WIDTH * MAX_MB_HEIGHT][4][6];$/;"	m	struct:img_par
nz_coeff	../inc/global.h	/^  int  ***nz_coeff;$/;"	m	struct:img_par
objectBuffer_t	../inc/erc_globals.h	/^} objectBuffer_t;$/;"	t
offset_for_non_ref_pic	../inc/global.h	/^           int offset_for_non_ref_pic;$/;"	m	struct:img_par
offset_for_non_ref_pic	../inc/parsetcommon.h	/^    int     offset_for_non_ref_pic;                         \/\/ se(v)$/;"	m
offset_for_ref_frame	../inc/global.h	/^           int offset_for_ref_frame[MAXnum_ref_frames_in_pic_order_cnt_cycle];$/;"	m	struct:img_par
offset_for_ref_frame	../inc/parsetcommon.h	/^      int   offset_for_ref_frame[MAXnum_ref_frames_in_pic_order_cnt_cycle];   \/\/ se(v)$/;"	m
offset_for_top_to_bottom_field	../inc/global.h	/^           int offset_for_top_to_bottom_field;$/;"	m	struct:img_par
offset_for_top_to_bottom_field	../inc/parsetcommon.h	/^    int     offset_for_top_to_bottom_field;                 \/\/ se(v)$/;"	m
old_seq	../inc/rtp.h	/^  unsigned int old_seq;    \/\/!< to detect wether packets were lost$/;"	m
one_contexts	../inc/global.h	/^  BiContextType  one_contexts [NUM_BLOCK_TYPES][NUM_ONE_CTX];$/;"	m
order_num	../inc/mbuffer.h	/^  int         order_num;$/;"	m	struct:storable_picture
out_buffer	output.cpp	/^FrameStore* out_buffer;$/;"	v
outfile	../inc/global.h	/^  char *outfile;                      \/\/!< Decoded YUV 4:2:0 output$/;"	m	struct:inp_par
output_one_frame_from_dpb	mbuffer.cpp	/^static void output_one_frame_from_dpb()$/;"	f	file:
overscan_appropriate_flag	../inc/parsetcommon.h	/^    Boolean      overscan_appropriate_flag;                      \/\/ u(1)$/;"	m
overscan_info_present_flag	../inc/parsetcommon.h	/^  Boolean      overscan_info_present_flag;                       \/\/ u(1)$/;"	m
p	../inc/rtp.h	/^  unsigned int p;          \/\/!< Padding bit, Padding MUST NOT be used$/;"	m
p_log	../inc/global.h	/^FILE *p_log;                    \/\/!< SNR file$/;"	v
p_log	global.cpp	/^FILE *p_log;                    \/\/!< SNR file$/;"	v
p_out	../inc/global.h	/^FILE *p_out;                    \/\/!< pointer to output YUV file$/;"	v
p_out	global.cpp	/^FILE *p_out;                    \/\/!< pointer to output YUV file$/;"	v
p_ref	../inc/global.h	/^FILE *p_ref;                    \/\/!< pointer to input original reference YUV file file$/;"	v
p_ref	global.cpp	/^FILE *p_ref;                    \/\/!< pointer to input original reference YUV file file$/;"	v
p_trace	../inc/global.h	/^FILE *p_trace;$/;"	v
packet	../inc/rtp.h	/^  byte *       packet;     \/\/!< complete packet including header and payload$/;"	m
packlen	../inc/rtp.h	/^  unsigned int packlen;    \/\/!< length of packet, typically paylen+12$/;"	m
partArr	../inc/global.h	/^  DataPartition       *partArr;      \/\/!< array of partitions$/;"	m
paylen	../inc/rtp.h	/^  unsigned int paylen;     \/\/!< length of payload in bytes$/;"	m
payload	../inc/rtp.h	/^  byte *       payload;    \/\/!< the payload including payload headers$/;"	m
peekSyntaxElement_UVLC	vlc.cpp	/^int peekSyntaxElement_UVLC(SyntaxElement *sym, struct img_par *img, struct inp_par *inp, struct datapartition *dP)$/;"	f
pic_height_in_map_units_minus1	../inc/parsetcommon.h	/^  unsigned  pic_height_in_map_units_minus1;                   \/\/ ue(v)$/;"	m
pic_init_qp_minus26	../inc/parsetcommon.h	/^  int       pic_init_qp_minus26;                              \/\/ se(v)$/;"	m
pic_init_qs_minus26	../inc/parsetcommon.h	/^  int       pic_init_qs_minus26;                              \/\/ se(v)$/;"	m
pic_num	../inc/mbuffer.h	/^  int         pic_num;$/;"	m	struct:storable_picture
pic_order_cnt_lsb	../inc/global.h	/^  unsigned int pic_order_cnt_lsb;$/;"	m	struct:img_par
pic_order_cnt_type	../inc/global.h	/^  unsigned int pic_order_cnt_type;$/;"	m	struct:img_par
pic_order_cnt_type	../inc/parsetcommon.h	/^  unsigned pic_order_cnt_type;$/;"	m
pic_order_present_flag	../inc/global.h	/^  unsigned int pic_order_present_flag;$/;"	m	struct:img_par
pic_order_present_flag	../inc/parsetcommon.h	/^  Boolean      pic_order_present_flag;                           \/\/ u(1)$/;"	m
pic_parameter_set_id	../inc/global.h	/^  int                 pic_parameter_set_id;   \/\/!<the ID of the picture parameter set the slice is reffering to$/;"	m
pic_parameter_set_id	../inc/parsetcommon.h	/^  unsigned  pic_parameter_set_id;                             \/\/ ue(v)$/;"	m
pic_parameter_set_rbsp_t	../inc/parsetcommon.h	/^} pic_parameter_set_rbsp_t;$/;"	t
pic_width_in_mbs_minus1	../inc/parsetcommon.h	/^  unsigned  pic_width_in_mbs_minus1;                          \/\/ ue(v)$/;"	m
picture_order	header.cpp	/^int picture_order(struct img_par *img)$/;"	f
picture_type	../inc/global.h	/^  int                 picture_type;  \/\/!< picture type$/;"	m
pixMeanInterpolateBlock	erc_do_i.cpp	/^static void pixMeanInterpolateBlock( byte *src[], byte *block, int blockSize, int frameWidth )$/;"	f	file:
pix_c_x	../inc/global.h	/^  int pix_c_x;$/;"	m	struct:img_par
pix_c_y	../inc/global.h	/^  int pix_c_y;$/;"	m	struct:img_par
pix_pos	../inc/global.h	/^typedef struct pix_pos$/;"	s
pix_x	../inc/global.h	/^  int pix_x;$/;"	m	struct:img_par
pix_y	../inc/global.h	/^  int pix_y;$/;"	m	struct:img_par
poc	../inc/mbuffer.h	/^  int         poc;$/;"	m	struct:storable_picture
poc	../inc/mbuffer.h	/^  int       poc;$/;"	m	struct:frame_store
pos2ctx_last	cabac.cpp	/^static const int* pos2ctx_last    [] = {pos2ctx_last4x4, pos2ctx_last4x4, pos2ctx_last8x8, pos2ctx_last8x4,$/;"	v	file:
pos2ctx_last4x4	cabac.cpp	/^static const int  pos2ctx_last4x4 [] = { 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_last8x4	cabac.cpp	/^static const int  pos2ctx_last8x4 [] = { 0,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,$/;"	v	file:
pos2ctx_last8x8	cabac.cpp	/^static const int  pos2ctx_last8x8 [] = { 0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,$/;"	v	file:
pos2ctx_map	cabac.cpp	/^static const int* pos2ctx_map    [] = {pos2ctx_map4x4, pos2ctx_map4x4, pos2ctx_map8x8, pos2ctx_map8x4,$/;"	v	file:
pos2ctx_map4x4	cabac.cpp	/^static const int  pos2ctx_map4x4 [] = { 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 14}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_map4x8i	cabac.cpp	/^static const int  pos2ctx_map4x8i[] = { 0,  1,  1,  1,  2,  3,  3,  4,  4,  4,  5,  6,  2,  7,  7,  8,$/;"	v	file:
pos2ctx_map8x4	cabac.cpp	/^static const int  pos2ctx_map8x4 [] = { 0,  1,  2,  3,  4,  5,  7,  8,  9, 10, 11,  9,  8,  6,  7,  8,$/;"	v	file:
pos2ctx_map8x4i	cabac.cpp	/^static const int  pos2ctx_map8x4i[] = { 0,  1,  2,  3,  4,  5,  6,  3,  4,  5,  6,  3,  4,  7,  6,  8,$/;"	v	file:
pos2ctx_map8x8	cabac.cpp	/^static const int  pos2ctx_map8x8 [] = { 0,  1,  2,  3,  4,  5,  5,  4,  4,  3,  3,  4,  4,  4,  5,  5,$/;"	v	file:
pos2ctx_map8x8i	cabac.cpp	/^static const int  pos2ctx_map8x8i[] = { 0,  1,  1,  2,  2,  3,  3,  4,  5,  6,  7,  7,  7,  8,  4,  5,$/;"	v	file:
pos2ctx_map_int	cabac.cpp	/^static const int* pos2ctx_map_int[] = {pos2ctx_map4x4, pos2ctx_map4x4, pos2ctx_map8x8i,pos2ctx_map8x4i,$/;"	v	file:
pos_x	../inc/global.h	/^  int pos_x;$/;"	m	struct:pix_pos
pos_y	../inc/global.h	/^  int pos_y;$/;"	m	struct:pix_pos
post_poc	header.cpp	/^void post_poc(struct img_par *img)$/;"	f
ppm_idx	output.cpp	/^static int ppm_idx=0;$/;"	v	file:
pre_frame_num	../inc/global.h	/^  unsigned int pre_frame_num;           \/\/!< store the frame_num in the last decoded slice. For detecting gap in frame_num.$/;"	m	struct:img_par
pred_weight_table	header.cpp	/^static void pred_weight_table()$/;"	f	file:
predict_nnz	macroblock.cpp	/^int predict_nnz(struct img_par *img, int i,int j)$/;"	f
predict_nnz_chroma	macroblock.cpp	/^int predict_nnz_chroma(struct img_par *img, int i,int j)$/;"	f
prevFrameYCondition	../inc/erc_api.h	/^  int   *prevFrameYCondition;$/;"	m	struct:ercVariables_s
profile_idc	../inc/parsetcommon.h	/^  unsigned  profile_idc;                                      \/\/ u(8)$/;"	m
psnr_number	../inc/global.h	/^  int psnr_number;$/;"	m	struct:img_par
pstruct_next_P	../inc/global.h	/^  int pstruct_next_P;$/;"	m	struct:img_par
pt	../inc/rtp.h	/^  unsigned int pt;         \/\/!< 7 bits, Payload Type, dynamically established $/;"	m
qp	../inc/global.h	/^  int                 qp;$/;"	m
qp	../inc/global.h	/^  int           qp;$/;"	m	struct:macroblock
qp	../inc/global.h	/^  int qp;                                     \/\/!< quant for the current frame$/;"	m	struct:img_par
qpsp	../inc/global.h	/^  int qpsp;                                   \/\/!< quant for SP-picture predicted frame$/;"	m	struct:img_par
quad	../inc/global.h	/^  int quad[256];$/;"	m	struct:img_par
quant_coef	block.cpp	/^static const int quant_coef[6][4][4] = {$/;"	v	file:
rLPS_table_64x4	biaridecod.cpp	/^const byte rLPS_table_64x4[64][4]=$/;"	v
readB8_typeInfo_CABAC	cabac.cpp	/^void readB8_typeInfo_CABAC (SyntaxElement *se,$/;"	f
readCBP_CABAC	cabac.cpp	/^void readCBP_CABAC(SyntaxElement *se,$/;"	f
readCBPandCoeffsFromNAL	macroblock.cpp	/^void readCBPandCoeffsFromNAL(struct img_par *img,struct inp_par *inp)$/;"	f
readCIPredMode_CABAC	cabac.cpp	/^void readCIPredMode_CABAC(SyntaxElement *se,$/;"	f
readCoeff4x4_CAVLC	macroblock.cpp	/^void readCoeff4x4_CAVLC (struct img_par *img,struct inp_par *inp,$/;"	f
readDquant_CABAC	cabac.cpp	/^void readDquant_CABAC( SyntaxElement *se,$/;"	f
readFieldModeInfo_CABAC	cabac.cpp	/^void readFieldModeInfo_CABAC( SyntaxElement *se,$/;"	f
readIPCMBytes_CABAC	cabac.cpp	/^void readIPCMBytes_CABAC(SyntaxElement *sym, Bitstream *currStream)$/;"	f
readIPCMcoeffsFromNAL	macroblock.cpp	/^void readIPCMcoeffsFromNAL(struct img_par *img, struct inp_par *inp, struct datapartition *dP)$/;"	f
readIntraPredMode_CABAC	cabac.cpp	/^void readIntraPredMode_CABAC( SyntaxElement *se,$/;"	f
readMB_skip_flagInfo_CABAC	cabac.cpp	/^void readMB_skip_flagInfo_CABAC( SyntaxElement *se,$/;"	f
readMB_typeInfo_CABAC	cabac.cpp	/^void readMB_typeInfo_CABAC( SyntaxElement *se,$/;"	f
readMVD_CABAC	cabac.cpp	/^void readMVD_CABAC( SyntaxElement *se,$/;"	f
readMotionInfoFromNAL	macroblock.cpp	/^void readMotionInfoFromNAL (struct img_par *img, struct inp_par *inp)$/;"	f
readRefFrame_CABAC	cabac.cpp	/^void readRefFrame_CABAC( SyntaxElement *se,$/;"	f
readRunLevel_CABAC	cabac.cpp	/^void readRunLevel_CABAC (SyntaxElement  *se,$/;"	f
readSlice	../inc/global.h	/^  int     (*readSlice)(struct img_par *, struct inp_par *);$/;"	m
readSyntaxElement	../inc/global.h	/^  int     (*readSyntaxElement)(SyntaxElement *, struct img_par *, struct inp_par *, struct datapartition *);$/;"	m	struct:datapartition
readSyntaxElement_CABAC	cabac.cpp	/^int readSyntaxElement_CABAC(SyntaxElement *se, struct img_par *img, struct inp_par *inp, DataPartition *this_dataPart)$/;"	f
readSyntaxElement_FLC	vlc.cpp	/^int readSyntaxElement_FLC(SyntaxElement *sym, Bitstream *currStream)$/;"	f
readSyntaxElement_Intra4x4PredictionMode	vlc.cpp	/^int readSyntaxElement_Intra4x4PredictionMode(SyntaxElement *sym, struct img_par *img, struct inp_par *inp, struct datapartition *dP)$/;"	f
readSyntaxElement_Level_VLC0	vlc.cpp	/^int readSyntaxElement_Level_VLC0(SyntaxElement *sym, struct datapartition *dP)$/;"	f
readSyntaxElement_Level_VLCN	vlc.cpp	/^int readSyntaxElement_Level_VLCN(SyntaxElement *sym, int vlc, struct datapartition *dP)  $/;"	f
readSyntaxElement_NumCoeffTrailingOnes	vlc.cpp	/^int readSyntaxElement_NumCoeffTrailingOnes(SyntaxElement *sym,  DataPartition *dP,$/;"	f
readSyntaxElement_NumCoeffTrailingOnesChromaDC	vlc.cpp	/^int readSyntaxElement_NumCoeffTrailingOnesChromaDC(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_Run	vlc.cpp	/^int readSyntaxElement_Run(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_TotalZeros	vlc.cpp	/^int readSyntaxElement_TotalZeros(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_TotalZerosChromaDC	vlc.cpp	/^int readSyntaxElement_TotalZerosChromaDC(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_UVLC	vlc.cpp	/^int readSyntaxElement_UVLC(SyntaxElement *sym, struct img_par *img, struct inp_par *inp, struct datapartition *dP)$/;"	f
readSyntaxElement_VLC	vlc.cpp	/^int readSyntaxElement_VLC(SyntaxElement *sym, Bitstream *currStream)$/;"	f
read_and_store_CBP_block_bit	cabac.cpp	/^int read_and_store_CBP_block_bit (Macroblock              *currMB,$/;"	f
read_ipred_modes	macroblock.cpp	/^void read_ipred_modes(struct img_par *img,struct inp_par *inp)$/;"	f
read_len	../inc/global.h	/^  int           read_len;           \/\/!< actual position in the codebuffer, CABAC only$/;"	m
read_new_slice	image.cpp	/^int read_new_slice()$/;"	f
read_one_macroblock	macroblock.cpp	/^int read_one_macroblock(struct img_par *img,struct inp_par *inp)$/;"	f
read_significance_map	cabac.cpp	/^int read_significance_map (Macroblock              *currMB,$/;"	f
read_significant_coefficients	cabac.cpp	/^void read_significant_coefficients (Macroblock              *currMB,$/;"	f
reading	../inc/global.h	/^  void  (*reading)(struct syntaxelement *, struct inp_par *, struct img_par *, DecodingEnvironmentPtr);$/;"	m	struct:syntaxelement
redundant_pic_cnt	../inc/global.h	/^  int redundant_pic_cnt; $/;"	m	struct:img_par
redundant_pic_cnt_present_flag	../inc/parsetcommon.h	/^  Boolean   redundant_pic_cnt_present_flag;                   \/\/ u(1)$/;"	m
redundant_slice_flag	../inc/global.h	/^  int redundant_slice_flag; $/;"	m	struct:img_par
refFrArr	../inc/global.h	/^int  **refFrArr;                                \/\/!< Array for reference frames of each block$/;"	v
refFrArr	global.cpp	/^int  **refFrArr;                                \/\/!< Array for reference frames of each block$/;"	v
ref_frames_in_buffer	../inc/mbuffer.h	/^  unsigned      ref_frames_in_buffer;$/;"	m	struct:decoded_picture_buffer
ref_idx	../inc/mbuffer.h	/^  int  ***    ref_idx;       \/\/!< reference picture   [list][subblock_x][subblock_y]$/;"	m	struct:storable_picture
ref_no_contexts	../inc/global.h	/^  BiContextType ref_no_contexts  [2][NUM_REF_NO_CTX];$/;"	m
ref_pic_id	../inc/mbuffer.h	/^  int64 ***    ref_pic_id;    \/\/!< reference picture identifier [list][subblock_x][subblock_y]$/;"	m	struct:storable_picture
ref_pic_list_reordering	header.cpp	/^static void ref_pic_list_reordering()$/;"	f	file:
ref_pic_list_reordering_flag_l0	../inc/global.h	/^  int                 ref_pic_list_reordering_flag_l0;$/;"	m
ref_pic_list_reordering_flag_l1	../inc/global.h	/^  int                 ref_pic_list_reordering_flag_l1;$/;"	m
ref_pic_num	../inc/mbuffer.h	/^  int64       ref_pic_num[6][32];$/;"	m	struct:storable_picture
ref_poc	../inc/mbuffer.h	/^  int64 ***    ref_poc;      \/\/!< reference picture identifier [list][subblock_x][subblock_y]$/;"	m	struct:storable_picture
reffile	../inc/global.h	/^  char *reffile;                      \/\/!< Optional YUV 4:2:0 reference file for SNR measurement$/;"	m	struct:inp_par
regionMode	../inc/erc_globals.h	/^  byte regionMode;  \/* region mode as above *\/$/;"	m
remapping_of_pic_nums_idc_l0	../inc/global.h	/^  int                 *remapping_of_pic_nums_idc_l0;$/;"	m
remapping_of_pic_nums_idc_l1	../inc/global.h	/^  int                 *remapping_of_pic_nums_idc_l1;$/;"	m
remove_frame_from_dpb	mbuffer.cpp	/^static void remove_frame_from_dpb(int pos)$/;"	f	file:
remove_unused_frame_from_dpb	mbuffer.cpp	/^static int remove_unused_frame_from_dpb()$/;"	f	file:
reorder_lists	image.cpp	/^static void reorder_lists(int currSliceType, Slice * currSlice)$/;"	f	file:
reorder_long_term	mbuffer.cpp	/^static void reorder_long_term(StorablePicture **RefPicListX, int num_ref_idx_lX_active_minus1, int LongTermPicNum, int *refIdxLX)$/;"	f	file:
reorder_ref_pic_list	mbuffer.cpp	/^void reorder_ref_pic_list(StorablePicture **list, int *list_size, int num_ref_idx_lX_active_minus1, int *remapping_of_pic_nums_idc, int *abs_diff_pic_num_minus1, int *long_term_pic_idx)$/;"	f
reorder_short_term	mbuffer.cpp	/^static void reorder_short_term(StorablePicture **RefPicListX, int num_ref_idx_lX_active_minus1, int picNumLX, int *refIdxLX)$/;"	f	file:
reset_coeffs	macroblock.cpp	/^void reset_coeffs()$/;"	f
reset_ec_flags	errorconcealment.cpp	/^void reset_ec_flags()$/;"	f
reset_wp_params	image.cpp	/^void reset_wp_params(struct img_par *img)$/;"	f
run_length_minus1	../inc/parsetcommon.h	/^      unsigned  run_length_minus1[MAXnum_slice_groups_minus1]; \/\/ ue(v)$/;"	m
sar_height	../inc/parsetcommon.h	/^      unsigned  sar_height;                                   \/\/ u(16)$/;"	m
sar_width	../inc/parsetcommon.h	/^      unsigned  sar_width;                                    \/\/ u(16)$/;"	m
se_v	vlc.cpp	/^int se_v (char *tracestring, Bitstream *bitstream)$/;"	f
segments	../inc/erc_api.h	/^  ercSegment_t *segments;$/;"	m	struct:ercVariables_s
seq	../inc/rtp.h	/^  unsigned int seq;        \/*!< RTP sequence number, incremented by one for$/;"	m
seq_parameter_set_id	../inc/parsetcommon.h	/^  unsigned  seq_parameter_set_id;                             \/\/ ue(v)$/;"	m
seq_parameter_set_rbsp_t	../inc/parsetcommon.h	/^} seq_parameter_set_rbsp_t;$/;"	t
set_ec_flag	errorconcealment.cpp	/^int set_ec_flag($/;"	f
set_ref_pic_num	image.cpp	/^void set_ref_pic_num()$/;"	f
siblock	../inc/global.h	/^  int           siblock[MAX_MB_WIDTH][MAX_MB_HEIGHT];$/;"	m	struct:img_par
siblock	../inc/global.h	/^  int  **siblock;$/;"	m	struct:img_par
sign	block.cpp	/^int sign(int a , int b)$/;"	f
size	../inc/mbuffer.h	/^  unsigned      size;$/;"	m	struct:decoded_picture_buffer
size_x	../inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
size_x_cr	../inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
size_y	../inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
size_y_cr	../inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
skip_flag	../inc/global.h	/^  int           skip_flag;$/;"	m	struct:macroblock
slice_group_change_cycle	../inc/global.h	/^  int slice_group_change_cycle;$/;"	m	struct:img_par
slice_group_change_direction_flag	../inc/parsetcommon.h	/^      Boolean   slice_group_change_direction_flag;            \/\/ u(1)$/;"	m
slice_group_change_rate_minus1	../inc/parsetcommon.h	/^      unsigned  slice_group_change_rate_minus1;               \/\/ ue(v)$/;"	m
slice_group_id	../inc/parsetcommon.h	/^      unsigned  *slice_group_id;                              \/\/ complete MBAmap u(v)$/;"	m
slice_group_map_type	../inc/parsetcommon.h	/^    unsigned  slice_group_map_type;                        \/\/ ue(v)$/;"	m
slice_nr	../inc/global.h	/^  int           slice_nr;$/;"	m	struct:macroblock
sliding_window_memory_management	mbuffer.cpp	/^static void sliding_window_memory_management(StorablePicture* p)$/;"	f	file:
snprintf	../inc/global.h	34;"	d
snr	ldecod.cpp	/^struct snr_par    *snr;         \/\/!< statistics$/;"	v
snr_par	../inc/global.h	/^struct snr_par$/;"	s
snr_u	../inc/global.h	/^  float snr_u;                                 \/\/!< current U SNR$/;"	m	struct:snr_par
snr_u1	../inc/global.h	/^  float snr_u1;                                \/\/!< SNR U(dB) first frame$/;"	m	struct:snr_par
snr_ua	../inc/global.h	/^  float snr_ua;                                \/\/!< Average SNR U(dB) remaining frames$/;"	m	struct:snr_par
snr_v	../inc/global.h	/^  float snr_v;                                 \/\/!< current V SNR$/;"	m	struct:snr_par
snr_v1	../inc/global.h	/^  float snr_v1;                                \/\/!< SNR V(dB) first frame$/;"	m	struct:snr_par
snr_va	../inc/global.h	/^  float snr_va;                                \/\/!< Average SNR V(dB) remaining frames$/;"	m	struct:snr_par
snr_y	../inc/global.h	/^  float snr_y;                                 \/\/!< current Y SNR$/;"	m	struct:snr_par
snr_y1	../inc/global.h	/^  float snr_y1;                                \/\/!< SNR Y(dB) first frame$/;"	m	struct:snr_par
snr_ya	../inc/global.h	/^  float snr_ya;                                \/\/!< Average SNR Y(dB) remaining frames$/;"	m	struct:snr_par
sp_switch	../inc/global.h	/^  int sp_switch;                              \/\/!< 1 for switching sp, 0 for normal sp$/;"	m	struct:img_par
ssrc	../inc/rtp.h	/^  unsigned int ssrc;       \/\/!< Synchronization Source, chosen randomly$/;"	m
startMBPos	../inc/erc_api.h	/^  int      startMBPos;$/;"	m	struct:ercSegment_s
start_macroblock	macroblock.cpp	/^void start_macroblock(struct img_par *img,struct inp_par *inp, int CurrentMBInScanOrder)$/;"	f
start_mb_nr	../inc/global.h	/^  int                 start_mb_nr;   \/\/!< MUST be set by NAL even in case of ei_flag == 1$/;"	m
startcodeprefix_len	../inc/nalucommon.h	/^  int startcodeprefix_len;      \/\/! 4 for parameter sets and first slice in picture, 3 for everything else (suggested)$/;"	m
state	../inc/global.h	/^  unsigned short state;         \/\/ index into state-table CP  $/;"	m
storable_picture	../inc/mbuffer.h	/^typedef struct storable_picture$/;"	s
store_picture_in_dpb	mbuffer.cpp	/^void store_picture_in_dpb(StorablePicture* p)$/;"	f
streamBuffer	../inc/global.h	/^  byte          *streamBuffer;      \/\/!< actual codebuffer for read bytes$/;"	m
structure	../inc/global.h	/^  PictureStructure    structure;     \/\/!< Identify picture structure type$/;"	m
structure	../inc/global.h	/^  int structure;                               \/\/!< Identify picture structure type$/;"	m	struct:img_par
structure	../inc/mbuffer.h	/^  PictureStructure structure;$/;"	m	struct:storable_picture
structure_old	../inc/global.h	/^  int structure_old;                           \/\/!< temp fix for multi slice per picture$/;"	m	struct:img_par
subblock_x	../inc/global.h	/^  int subblock_x;$/;"	m	struct:img_par
subblock_y	../inc/global.h	/^  int subblock_y;$/;"	m	struct:img_par
symbolCount	cabac.cpp	/^int symbolCount = 0;$/;"	v
syntaxelement	../inc/global.h	/^typedef struct syntaxelement$/;"	s
tb_hls_cavld_p	ldecod.cpp	/^tb_hls_cavld *tb_hls_cavld_p = NULL;$/;"	v
tex_ctx	../inc/global.h	/^  TextureInfoContexts *tex_ctx;      \/\/!< pointer to struct of context models for use in CABAC$/;"	m
time_offset_length	../inc/parsetcommon.h	/^  unsigned  time_offset_length;                               \/\/ u(5)$/;"	m
time_scale	../inc/parsetcommon.h	/^    unsigned  time_scale;                                     \/\/ u(32)$/;"	m
timestamp	../inc/rtp.h	/^  unsigned int timestamp;  \/\/!< timestamp, 27 MHz for H.26L$/;"	m
timing_info_present_flag	../inc/parsetcommon.h	/^  Boolean      timing_info_present_flag;                         \/\/ u(1)$/;"	m
tlmDataBuffer	output.cpp	/^unsigned char tlmDataBuffer[12];$/;"	v
tlmDataLenByte	output.cpp	/^unsigned int  tlmDataLenByte;$/;"	v
top_field	../inc/mbuffer.h	/^  StorablePicture *top_field;$/;"	m	struct:frame_store
top_field	../inc/mbuffer.h	/^  struct storable_picture *top_field;     \/\/ for mb aff, if frame for referencing the top field$/;"	m	struct:storable_picture
top_left	../inc/parsetcommon.h	/^      unsigned  top_left[MAXnum_slice_groups_minus1];         \/\/ ue(v)$/;"	m
top_poc	../inc/mbuffer.h	/^  int         top_poc;$/;"	m	struct:storable_picture
toppoc	../inc/global.h	/^           int toppoc;      \/\/poc for this top field \/\/ POC200301$/;"	m	struct:img_par
tot_time	../inc/global.h	/^int tot_time;$/;"	v
tot_time	global.cpp	/^int tot_time;$/;"	v
tr	../inc/global.h	/^  int tr;                                     \/\/!< temporal reference, 8 bit, wrapps at 255$/;"	m	struct:img_par
tr_old	../inc/global.h	/^  int tr_old;                                     \/\/!< old temporal reference, for detection of a new frame, added by WYK$/;"	m	struct:img_par
tracebits	filehandle.cpp	/^void tracebits($/;"	f
tracebits2	filehandle.cpp	/^void tracebits2($/;"	f
tracestring	../inc/global.h	/^  char          tracestring[TRACESTRING_SIZE]; \/\/!< trace string$/;"	m	struct:syntaxelement
transfer_characteristics	../inc/parsetcommon.h	/^      unsigned  transfer_characteristics;                     \/\/ u(8)$/;"	m
type	../inc/global.h	/^  int           type;                  \/\/!< type of syntax element for data part.$/;"	m	struct:syntaxelement
type	../inc/global.h	/^  int type;                                   \/\/!< image type INTER\/INTRA$/;"	m	struct:img_par
type2ctx_abs	cabac.cpp	/^static const int type2ctx_abs [] = { 0,  1,  2,  3,  3,  4,  5,  6}; \/\/ 7$/;"	v	file:
type2ctx_bcbp	cabac.cpp	/^static const int type2ctx_bcbp[] = { 0,  1,  2,  2,  3,  4,  5,  6}; \/\/ 7$/;"	v	file:
type2ctx_last	cabac.cpp	/^static const int type2ctx_last[] = { 0,  1,  2,  3,  4,  5,  6,  7}; \/\/ 8$/;"	v	file:
type2ctx_map	cabac.cpp	/^static const int type2ctx_map [] = { 0,  1,  2,  3,  4,  5,  6,  7}; \/\/ 8$/;"	v	file:
type2ctx_one	cabac.cpp	/^static const int type2ctx_one [] = { 0,  1,  2,  3,  3,  4,  5,  6}; \/\/ 7$/;"	v	file:
uCondition	../inc/erc_api.h	/^  int     *uCondition;$/;"	m	struct:ercVariables_s
u_1	vlc.cpp	/^int u_1 (char *tracestring, Bitstream *bitstream)$/;"	f
u_int32	../inc/global.h	/^typedef unsigned int    u_int32;$/;"	t
u_v	vlc.cpp	/^int u_v (int LenInBits, char*tracestring, Bitstream *bitstream)$/;"	f
ue_v	vlc.cpp	/^int ue_v (char *tracestring, Bitstream *bitstream)$/;"	f
unary_bin_decode	cabac.cpp	/^unsigned int unary_bin_decode(DecodingEnvironmentPtr dep_dp,$/;"	f
unary_bin_max_decode	cabac.cpp	/^unsigned int unary_bin_max_decode(DecodingEnvironmentPtr dep_dp,$/;"	f
unary_exp_golomb_level_decode	cabac.cpp	/^unsigned int unary_exp_golomb_level_decode( DecodingEnvironmentPtr dep_dp,$/;"	f
unary_exp_golomb_mv_decode	cabac.cpp	/^unsigned int unary_exp_golomb_mv_decode(DecodingEnvironmentPtr dep_dp,$/;"	f
uninit_out_buffer	output.cpp	/^void uninit_out_buffer()$/;"	f
unmark_for_long_term_reference	mbuffer.cpp	/^static void unmark_for_long_term_reference(FrameStore* fs)$/;"	f	file:
unmark_for_reference	mbuffer.cpp	/^static void unmark_for_reference(FrameStore* fs)$/;"	f	file:
unmark_long_term_field_for_reference_by_frame_idx	mbuffer.cpp	/^static void unmark_long_term_field_for_reference_by_frame_idx(StorablePicture *p, int long_term_frame_idx, int picNumX)$/;"	f	file:
unmark_long_term_frame_for_reference_by_frame_idx	mbuffer.cpp	/^static void unmark_long_term_frame_for_reference_by_frame_idx(int long_term_frame_idx)$/;"	f	file:
update_ltref_list	mbuffer.cpp	/^void update_ltref_list()$/;"	f
update_ref_list	mbuffer.cpp	/^void update_ref_list()$/;"	f
uptr	../inc/erc_globals.h	/^  byte *uptr;$/;"	m
used_for_reference	../inc/mbuffer.h	/^  int         used_for_reference;$/;"	m	struct:storable_picture
used_size	../inc/mbuffer.h	/^  unsigned      used_size;$/;"	m	struct:decoded_picture_buffer
uvlc_startcode_follows	vlc.cpp	/^int uvlc_startcode_follows(struct img_par *img, struct inp_par *inp, int dummy)$/;"	f
v	../inc/rtp.h	/^  unsigned int v;          \/\/!< Version, 2 bits, MUST be 0x2$/;"	m
vCondition	../inc/erc_api.h	/^  int     *vCondition;$/;"	m	struct:ercVariables_s
value1	../inc/global.h	/^  int           value1;                \/\/!< numerical value of syntax element$/;"	m	struct:syntaxelement
value2	../inc/global.h	/^  int           value2;                \/\/!< for blocked symbols, e.g. run\/level$/;"	m	struct:syntaxelement
vbr_cbr_flag	../inc/parsetcommon.h	/^    unsigned  vbr_cbr_flag[MAXIMUMVALUEOFcpb_cnt];            \/\/ u(1)$/;"	m
vcl_hrd_parameters	../inc/parsetcommon.h	/^    hrd_parameters_t vcl_hrd_parameters;                      \/\/ hrd_paramters_t$/;"	m
vcl_hrd_parameters_present_flag	../inc/parsetcommon.h	/^  Boolean      vcl_hrd_parameters_present_flag;                  \/\/ u(1)$/;"	m
video_format	../inc/parsetcommon.h	/^    unsigned  video_format;                                   \/\/ u(3)$/;"	m
video_full_range_flag	../inc/parsetcommon.h	/^    Boolean      video_full_range_flag;                          \/\/ u(1)$/;"	m
video_signal_type_present_flag	../inc/parsetcommon.h	/^  Boolean      video_signal_type_present_flag;                   \/\/ u(1)$/;"	m
vptr	../inc/erc_globals.h	/^  byte *vptr;$/;"	m
vui_parameters_present_flag	../inc/parsetcommon.h	/^  Boolean   vui_parameters_present_flag;                      \/\/ u(1)$/;"	m
vui_pic_parameters_flag	../inc/parsetcommon.h	/^  Boolean   vui_pic_parameters_flag;                          \/\/ u(1)$/;"	m
vui_seq_parameters	../inc/parsetcommon.h	/^    vui_seq_parameters_t vui_seq_parameters;                  \/\/ vui_seq_parameters_t$/;"	m
vui_seq_parameters_t	../inc/parsetcommon.h	/^} vui_seq_parameters_t;$/;"	t
wbp_weight	../inc/global.h	/^  int ****wbp_weight; \/\/weight in [list][fw_index][bw_index][component] order$/;"	m	struct:img_par
weighted_bipred_idc	../inc/global.h	/^  unsigned int weighted_bipred_idc;$/;"	m	struct:img_par
weighted_bipred_idc	../inc/parsetcommon.h	/^  Boolean   weighted_bipred_idc;                              \/\/ u(2)$/;"	m
weighted_pred_flag	../inc/global.h	/^  unsigned int weighted_pred_flag;$/;"	m	struct:img_par
weighted_pred_flag	../inc/parsetcommon.h	/^  Boolean   weighted_pred_flag;                               \/\/ u(1)$/;"	m
width	../inc/global.h	/^  int width;$/;"	m	struct:img_par
width_cr	../inc/global.h	/^  int width_cr;                               \/\/!< width chroma$/;"	m	struct:img_par
wp_offset	../inc/global.h	/^  int ***wp_offset;  \/\/ offset in [list][index][component] order$/;"	m	struct:img_par
wp_round_chroma	../inc/global.h	/^  int wp_round_chroma;$/;"	m	struct:img_par
wp_round_luma	../inc/global.h	/^  int wp_round_luma;$/;"	m	struct:img_par
wp_weight	../inc/global.h	/^  int ***wp_weight;  \/\/ weight in [list][index][component] order$/;"	m	struct:img_par
write_picture	output.cpp	/^void write_picture(StorablePicture *p, FILE *p_out)$/;"	f
write_picture_ppm	output.cpp	/^write_picture_ppm(StorablePicture *p, FILE *p_out)$/;"	f
write_picture_tlm	output.cpp	/^write_picture_tlm(StorablePicture *p, FILE *p_out)$/;"	f
write_stored_frame	output.cpp	/^void write_stored_frame( FrameStore *fs,FILE *p_out)$/;"	f
write_unpaired_field	output.cpp	/^void write_unpaired_field(FrameStore* fs, FILE *p_out)$/;"	f
x	../inc/global.h	/^  int x;$/;"	m	struct:pix_pos
x	../inc/rtp.h	/^  unsigned int x;          \/\/!< Extension, MUST be zero$/;"	m
xMin	../inc/erc_globals.h	/^  int xMin;         \/* X coordinate of the pixel position of the top-left corner of the region *\/$/;"	m
xPosMB	../inc/erc_api.h	52;"	d
xPosYBlock	../inc/erc_api.h	46;"	d
y	../inc/global.h	/^  int y;$/;"	m	struct:pix_pos
yCondition	../inc/erc_api.h	/^  int     *yCondition;$/;"	m	struct:ercVariables_s
yMin	../inc/erc_globals.h	/^  int yMin;         \/* Y coordinate of the pixel position of the top-left corner of the region *\/$/;"	m
yPosMB	../inc/erc_api.h	55;"	d
yPosYBlock	../inc/erc_api.h	49;"	d
yptr	../inc/erc_globals.h	/^  byte *yptr;$/;"	m
